<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0204.1543                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='classic' />
  <datasources>
    <datasource caption='Supply vs Demand 1 (2)' inline='true' name='excel-direct.1ea1drr1mjlbi919tswex1a6uzec' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.501818' measure-ordering='alphabetic' measure-percentage='0.498182' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='import_export_2' inline='true' name='excel-direct.16p2gaq1ejegui17r0hi215391sc' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='All' table='[All$]' type='table'>
          <columns gridOrigin='A1:H55:no:A1:H55:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='real' name='U.S. Crude Oil First Purchase Price, Annual' ordinal='1' />
            <column datatype='integer' name='Crude oil production (Thousand Barrels)' ordinal='2' />
            <column datatype='integer' name='Crude oil consumption (Thousand Barrels)' ordinal='3' />
            <column datatype='integer' name='All Petroleum Products Total Consumption (Thousand Barrels)' ordinal='4' />
            <column datatype='integer' name='U.S. Imports of Crude Oil (Thousand Barrels)' ordinal='5' />
            <column datatype='integer' name='U.S. Exports of Crude Oil (Thousand Barrels)' ordinal='6' />
            <column datatype='integer' name='U.S. Net import of Crude Oil (Thousand Barrels)' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Crude Oil First Purchase Price, Annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[U.S. Crude Oil First Purchase Price, Annual]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>U.S. Crude Oil First Purchase Price, Annual</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crude oil production (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crude oil production (Thousand Barrels)]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>Crude oil production (Thousand Barrels)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crude oil consumption (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crude oil consumption (Thousand Barrels)]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>Crude oil consumption (Thousand Barrels)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>All Petroleum Products Total Consumption (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[All Petroleum Products Total Consumption (Thousand Barrels)]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>All Petroleum Products Total Consumption (Thousand Barrels)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Imports of Crude Oil (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Imports of Crude Oil (Thousand Barrels)]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>U.S. Imports of Crude Oil (Thousand Barrels)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Exports of Crude Oil (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Exports of Crude Oil (Thousand Barrels)]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>U.S. Exports of Crude Oil (Thousand Barrels)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Net import of Crude Oil (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Net import of Crude Oil (Thousand Barrels)]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>U.S. Net import of Crude Oil (Thousand Barrels)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H55:no:A1:H55:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Crude oil consumption (Thousand Barrels)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Crude oil production (Thousand Barrels)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[U.S. Crude Oil First Purchase Price, Annual]' role='measure' type='quantitative' />
      <column datatype='integer' name='[U.S. Exports of Crude Oil (Thousand Barrels)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[U.S. Imports of Crude Oil (Thousand Barrels)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[U.S. Net import of Crude Oil (Thousand Barrels)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[U.S. Crude Oil First Purchase Price, Annual]' derivation='Avg' name='[avg:U.S. Crude Oil First Purchase Price, Annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Crude oil consumption (Thousand Barrels)]' derivation='Sum' name='[sum:Crude oil consumption (Thousand Barrels):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Crude oil production (Thousand Barrels)]' derivation='Sum' name='[sum:Crude oil production (Thousand Barrels):qk]' pivot='key' type='quantitative' />
      <column-instance column='[U.S. Crude Oil First Purchase Price, Annual]' derivation='Sum' name='[sum:U.S. Crude Oil First Purchase Price, Annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[U.S. Exports of Crude Oil (Thousand Barrels)]' derivation='Sum' name='[sum:U.S. Exports of Crude Oil (Thousand Barrels):qk]' pivot='key' type='quantitative' />
      <column-instance column='[U.S. Imports of Crude Oil (Thousand Barrels)]' derivation='Sum' name='[sum:U.S. Imports of Crude Oil (Thousand Barrels):qk]' pivot='key' type='quantitative' />
      <column-instance column='[U.S. Net import of Crude Oil (Thousand Barrels)]' derivation='Sum' name='[sum:U.S. Net import of Crude Oil (Thousand Barrels):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.244681' measure-ordering='alphabetic' measure-percentage='0.755319' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.16p2gaq1ejegui17r0hi215391sc].[sum:U.S. Exports of Crude Oil (Thousand Barrels):qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.16p2gaq1ejegui17r0hi215391sc].[sum:U.S. Net import of Crude Oil (Thousand Barrels):qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel-direct.16p2gaq1ejegui17r0hi215391sc].[sum:Crude oil consumption (Thousand Barrels):qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.16p2gaq1ejegui17r0hi215391sc].[avg:U.S. Crude Oil First Purchase Price, Annual:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.16p2gaq1ejegui17r0hi215391sc].[sum:U.S. Crude Oil First Purchase Price, Annual:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.16p2gaq1ejegui17r0hi215391sc].[sum:Crude oil production (Thousand Barrels):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.16p2gaq1ejegui17r0hi215391sc].[sum:U.S. Imports of Crude Oil (Thousand Barrels):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='import_opec' inline='true' name='excel-direct.0vusrnn1ulm5371h376yf1gao78y' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='import_OPEC' table='[import_OPEC$]' type='table'>
          <columns gridOrigin='A1:E23:no:A1:E23:0' header='yes' outcome='6'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)' ordinal='1' />
            <column datatype='integer' name='Persian Gulf Countries' ordinal='2' />
            <column datatype='integer' name='OPEC' ordinal='3' />
            <column datatype='integer' name='Non-OPEC' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[import_OPEC]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)]</local-name>
            <parent-name>[import_OPEC]</parent-name>
            <remote-alias>U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Persian Gulf Countries</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Persian Gulf Countries]</local-name>
            <parent-name>[import_OPEC]</parent-name>
            <remote-alias>Persian Gulf Countries</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPEC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OPEC]</local-name>
            <parent-name>[import_OPEC]</parent-name>
            <remote-alias>OPEC</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Non-OPEC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Non-OPEC]</local-name>
            <parent-name>[import_OPEC]</parent-name>
            <remote-alias>Non-OPEC</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[import_OPEC]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E23:no:A1:E23:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Non-OPEC]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Opec' datatype='integer' name='[OPEC]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Persian Gulf Countries]' role='measure' type='quantitative' />
      <column-instance column='[Non-OPEC]' derivation='Sum' name='[sum:Non-OPEC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OPEC]' derivation='Sum' name='[sum:OPEC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Persian Gulf Countries]' derivation='Sum' name='[sum:Persian Gulf Countries:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.4' measure-ordering='alphabetic' measure-percentage='0.6' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[sum:Non-OPEC:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[sum:Persian Gulf Countries:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[sum:OPEC:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='BLS Data Series (Gas Price)' inline='true' name='excel-direct.0dwdace0y2ldw017fxiz502st6uf' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='BLS Data Series' table='[&apos;BLS Data Series$&apos;]' type='table'>
          <columns gridOrigin='A1:N40:no:A1:N40:0' header='yes' outcome='2'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='real' name='Jan' ordinal='1' />
            <column datatype='real' name='Feb' ordinal='2' />
            <column datatype='real' name='Mar' ordinal='3' />
            <column datatype='real' name='Apr' ordinal='4' />
            <column datatype='real' name='May' ordinal='5' />
            <column datatype='real' name='Jun' ordinal='6' />
            <column datatype='real' name='Jul' ordinal='7' />
            <column datatype='real' name='Aug' ordinal='8' />
            <column datatype='real' name='Sep' ordinal='9' />
            <column datatype='real' name='Oct' ordinal='10' />
            <column datatype='real' name='Nov' ordinal='11' />
            <column datatype='real' name='Dec' ordinal='12' />
            <column datatype='real' name='Annual' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jan</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jan]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Jan</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Feb]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Feb</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mar]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Mar</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apr</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apr]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Apr</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>May</remote-name>
            <remote-type>5</remote-type>
            <local-name>[May]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>May</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jun</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jun]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Jun</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jul</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jul]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Jul</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aug]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Aug</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sep]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Sep</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oct]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Oct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nov</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nov]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Nov</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dec]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Dec</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Annual</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N40:no:A1:N40:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.177982' measure-ordering='alphabetic' measure-percentage='0.822018' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Consolidated (Supply vs Demand)' inline='true' name='excel-direct.1wwima204s9yqg1g4lvua0o0mnq7' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='Consolidated' table='[Consolidated$]' type='table'>
          <columns gridOrigin='A1:J34:no:A1:J34:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='real' name='U.S. Crude Oil First Purchase Price, Annual' ordinal='1' />
            <column datatype='integer' name='U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)' ordinal='2' />
            <column datatype='integer' name='Crude Oil Production (Thousand Barrels)' ordinal='3' />
            <column datatype='integer' name='Supply' ordinal='4' />
            <column datatype='integer' name='U.S. Exports of Crude Oil (Thousand Barrels)' ordinal='5' />
            <column datatype='integer' name='All Petroleum Products Total Consumption (Thousand Barrels)' ordinal='6' />
            <column datatype='integer' name='Demand' ordinal='7' />
            <column datatype='integer' name='Difference in Supply and Demand' ordinal='8' />
            <column datatype='real' name='Proportion' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Crude Oil First Purchase Price, Annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[U.S. Crude Oil First Purchase Price, Annual]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>U.S. Crude Oil First Purchase Price, Annual</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crude Oil Production (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crude Oil Production (Thousand Barrels)]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Crude Oil Production (Thousand Barrels)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Supply</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Supply]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Supply</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Exports of Crude Oil (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Exports of Crude Oil (Thousand Barrels)]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>U.S. Exports of Crude Oil (Thousand Barrels)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>All Petroleum Products Total Consumption (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[All Petroleum Products Total Consumption (Thousand Barrels)]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>All Petroleum Products Total Consumption (Thousand Barrels)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Demand</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Demand]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Demand</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Difference in Supply and Demand</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Difference in Supply and Demand]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Difference in Supply and Demand</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Proportion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Proportion]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Proportion</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J34:no:A1:J34:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Crude Oil Production' datatype='integer' name='[Crude Oil Production (Thousand Barrels)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Demand]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Difference in Supply and Demand]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Proportion]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Supply]' role='measure' type='quantitative' />
      <column datatype='real' name='[U.S. Crude Oil First Purchase Price, Annual]' role='measure' type='quantitative' />
      <column caption='U.S. Crude Oil Import' datatype='integer' name='[U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Crude Oil Production (Thousand Barrels)]' derivation='Sum' name='[sum:Crude Oil Production (Thousand Barrels):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Demand]' derivation='Sum' name='[sum:Demand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Difference in Supply and Demand]' derivation='Sum' name='[sum:Difference in Supply and Demand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Proportion]' derivation='Sum' name='[sum:Proportion:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Supply]' derivation='Sum' name='[sum:Supply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[U.S. Crude Oil First Purchase Price, Annual]' derivation='Sum' name='[sum:U.S. Crude Oil First Purchase Price, Annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)]' derivation='Sum' name='[sum:U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.239362' measure-ordering='alphabetic' measure-percentage='0.760638' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#006ba4'>
              <bucket>&quot;[excel-direct.1wwima204s9yqg1g4lvua0o0mnq7].[sum:Crude Oil Production (Thousand Barrels):qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.1wwima204s9yqg1g4lvua0o0mnq7].[sum:Demand:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.1wwima204s9yqg1g4lvua0o0mnq7].[sum:U.S. Crude Oil First Purchase Price, Annual:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel-direct.1wwima204s9yqg1g4lvua0o0mnq7].[sum:Proportion:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.1wwima204s9yqg1g4lvua0o0mnq7]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.1wwima204s9yqg1g4lvua0o0mnq7].[sum:Difference in Supply and Demand:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.1wwima204s9yqg1g4lvua0o0mnq7].[sum:Supply:qk]&quot;</bucket>
            </map>
            <map to='#ff800e'>
              <bucket>&quot;[excel-direct.1wwima204s9yqg1g4lvua0o0mnq7].[sum:U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data 1 (Total ExpImp)' inline='true' name='excel-direct.1y0quz100q6w6p14lasha1uk9luy' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='Data 1' table='[&apos;Data 1$&apos;]' type='table'>
          <columns gridOrigin='A1:C106:no:A1:C106:0' header='yes' outcome='6'>
            <column datatype='integer' name='Date' ordinal='0' />
            <column datatype='integer' name='U.S. Imports of Crude Oil (Thousand Barrels)' ordinal='1' />
            <column datatype='integer' name='U.S. Exports of Crude Oil (Thousand Barrels)' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Data 1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Imports of Crude Oil (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Imports of Crude Oil (Thousand Barrels)]</local-name>
            <parent-name>[Data 1]</parent-name>
            <remote-alias>U.S. Imports of Crude Oil (Thousand Barrels)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Exports of Crude Oil (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Exports of Crude Oil (Thousand Barrels)]</local-name>
            <parent-name>[Data 1]</parent-name>
            <remote-alias>U.S. Exports of Crude Oil (Thousand Barrels)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C106:no:A1:C106:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='Sum' datatype='integer' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.356383' measure-ordering='alphabetic' measure-percentage='0.643617' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='import (Import Export)' inline='true' name='excel-direct.0zo9lmp084syct1bmulw70l18ssy' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='import' table='[import$]' type='table'>
          <columns gridOrigin='A1:B60:no:A1:B60:0' header='yes' outcome='6'>
            <column datatype='string' name='Countries' ordinal='0' />
            <column datatype='integer' name='U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Countries</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Countries]</local-name>
            <parent-name>[import]</parent-name>
            <remote-alias>Countries</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)]</local-name>
            <parent-name>[import]</parent-name>
            <remote-alias>U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[import]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B60:no:A1:B60:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Azerbaija&quot;' value='&quot;Azerbaijan&quot;' />
          <semantic-value key='&quot;Brunie&quot;' value='&quot;Brunei&quot;' />
          <semantic-value key='&quot;Columbia&quot;' value='&quot;Colombia&quot;' />
          <semantic-value key='&quot;Guatemela&quot;' value='&quot;Guatemala&quot;' />
          <semantic-value key='&quot;Korea&quot;' value='&quot;South Korea&quot;' />
          <semantic-value key='&quot;OPEC Countries&quot;' value='&quot;Saudi Arabia&quot;' />
          <semantic-value key='&quot;Venezula&quot;' value='&quot;Venezuela&quot;' />
          <semantic-value key='&quot;Vigin Islands&quot;' value='&quot;Virgin Islands&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.352727' measure-ordering='alphabetic' measure-percentage='0.647273' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='import_export_country (Supply vs Demand 1)' inline='true' name='excel-direct.0x3yd7b1tjneld1aoncnn0webaw2' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.336336' measure-ordering='alphabetic' measure-percentage='0.663664' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (con_pro)' inline='true' name='excel-direct.08k6cz40lri1cy1bfsjq700lf7hw' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E5509:no:A1:E5509:0' header='yes' outcome='6'>
            <column datatype='string' name='StateCode' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='string' name='Oil Mode' ordinal='3' />
            <column datatype='integer' name='Con/prod' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>StateCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StateCode]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>StateCode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Oil Mode]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Oil Mode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Con/prod</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Con/prod]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Con/prod</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E5509:no:A1:E5509:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Oil Mode]' role='dimension' type='nominal' />
      <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Oil Mode]' derivation='None' name='[none:Oil Mode:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.500917' measure-ordering='alphabetic' measure-percentage='0.499083' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Oil Mode:nk]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>&quot;Consumption&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Production&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (New Imports)' inline='true' name='excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='import_year_country' table='[import_year_country$]' type='table'>
          <columns gridOrigin='A1:H1101:no:A1:H1101:0' header='yes' outcome='2'>
            <column datatype='string' name='Origin' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='PathID' ordinal='2' />
            <column datatype='integer' name='PathOrder' ordinal='3' />
            <column datatype='integer' name='Import' ordinal='4' />
            <column datatype='real' name='Latitude' ordinal='5' />
            <column datatype='real' name='Longitude' ordinal='6' />
            <column datatype='real' name='%change from 2001' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[import_year_country]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[import_year_country]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PathID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PathID]</local-name>
            <parent-name>[import_year_country]</parent-name>
            <remote-alias>PathID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PathOrder</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PathOrder]</local-name>
            <parent-name>[import_year_country]</parent-name>
            <remote-alias>PathOrder</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Import]</local-name>
            <parent-name>[import_year_country]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[import_year_country]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[import_year_country]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>%change from 2001</remote-name>
            <remote-type>5</remote-type>
            <local-name>[%change from 2001]</local-name>
            <parent-name>[import_year_country]</parent-name>
            <remote-alias>%change from 2001</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[import_year_country]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H1101:no:A1:H1101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='%Change From 2001' datatype='real' name='[%change from 2001]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude1' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude1' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Origin1' datatype='string' name='[Origin]' role='dimension' type='nominal' />
      <column caption='Path ID' datatype='string' name='[PathID]' role='dimension' type='nominal' />
      <column caption='Path Order' datatype='integer' name='[PathOrder]' role='measure' type='quantitative' />
      <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.403909' measure-ordering='alphabetic' measure-percentage='0.596091' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Origin:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Iraq&quot;</bucket>
            <bucket>&quot;Kuwait&quot;</bucket>
            <bucket>&quot;Saudi Arabia&quot;</bucket>
            <bucket>&quot;Algeria&quot;</bucket>
            <bucket>&quot;Angola&quot;</bucket>
            <bucket>&quot;Ecuador&quot;</bucket>
            <bucket>&quot;Nigeria&quot;</bucket>
            <bucket>&quot;Venezula&quot;</bucket>
            <bucket>&quot;Argentina&quot;</bucket>
            <bucket>&quot;Belgium&quot;</bucket>
            <bucket>&quot;Brazil&quot;</bucket>
            <bucket>&quot;Canada&quot;</bucket>
            <bucket>&quot;Columbia&quot;</bucket>
            <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            <bucket>&quot;France&quot;</bucket>
            <bucket>&quot;Gabon&quot;</bucket>
            <bucket>&quot;Indonesia&quot;</bucket>
            <bucket>&quot;Korea&quot;</bucket>
            <bucket>&quot;Mexico&quot;</bucket>
            <bucket>&quot;Netherlands&quot;</bucket>
            <bucket>&quot;Norway&quot;</bucket>
            <bucket>&quot;Russia&quot;</bucket>
            <bucket>&quot;Trinidad&quot;</bucket>
            <bucket>&quot;United Kingdom&quot;</bucket>
            <bucket>&quot;Virgin Islands&quot;</bucket>
            <bucket>&quot;USA&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='(DV-case_study)' inline='true' name='excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf' version='9.2'>
      <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='1' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ALL_STATES_ALL_YRS_BOE1].[Year]' />
              <expression op='[Sheet1 (2)].[Year]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[ALL_STATES_ALL_YRS_BOE1].[Year]' />
                <expression op='[BLS Data Series].[Year]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[ALL_STATES_ALL_YRS_BOE1].[Year]' />
                  <expression op='[Consolidated].[Year]' />
                </expression>
              </clause>
              <relation name='ALL_STATES_ALL_YRS_BOE1' table='[ALL_STATES_ALL_YRS_BOE$]' type='table'>
                <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Abbr' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='rate_class' ordinal='2' />
                  <column datatype='integer' name='Number of Oil Wells' ordinal='3' />
                  <column datatype='integer' name='oil_prod_BBL' ordinal='4' />
                  <column datatype='integer' name='ADgas_prod_MCF' ordinal='5' />
                  <column datatype='integer' name='oil_wells_dayson' ordinal='6' />
                  <column datatype='integer' name='num_gas_wells' ordinal='7' />
                  <column datatype='integer' name='NAgas_prod_MCF' ordinal='8' />
                  <column datatype='integer' name='conden_prod_BBL' ordinal='9' />
                  <column datatype='integer' name='gas_wells_dayson' ordinal='10' />
                </columns>
              </relation>
              <relation name='Consolidated' table='[Consolidated$]' type='table'>
                <columns gridOrigin='A1:J34:no:A1:J34:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='real' name='U.S. Crude Oil First Purchase Price, Annual' ordinal='1' />
                  <column datatype='integer' name='U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)' ordinal='2' />
                  <column datatype='integer' name='Crude Oil Production (Thousand Barrels)' ordinal='3' />
                  <column datatype='integer' name='Supply' ordinal='4' />
                  <column datatype='integer' name='U.S. Exports of Crude Oil (Thousand Barrels)' ordinal='5' />
                  <column datatype='integer' name='All Petroleum Products Total Consumption (Thousand Barrels)' ordinal='6' />
                  <column datatype='integer' name='Demand' ordinal='7' />
                  <column datatype='integer' name='Difference in Supply and Demand' ordinal='8' />
                  <column datatype='real' name='Proportion' ordinal='9' />
                </columns>
              </relation>
            </relation>
            <relation name='BLS Data Series' table='[&apos;BLS Data Series$&apos;]' type='table'>
              <columns gridOrigin='A1:N40:no:A1:N40:1' lost='0' outcome='1' processed='534'>
                <column datatype='integer' name='Year' ordinal='0' />
                <column datatype='real' name='Jan' ordinal='1' />
                <column datatype='real' name='Feb' ordinal='2' />
                <column datatype='real' name='Mar' ordinal='3' />
                <column datatype='real' name='Apr' ordinal='4' />
                <column datatype='real' name='May' ordinal='5' />
                <column datatype='real' name='Jun' ordinal='6' />
                <column datatype='real' name='Jul' ordinal='7' />
                <column datatype='real' name='Aug' ordinal='8' />
                <column datatype='real' name='Sep' ordinal='9' />
                <column datatype='real' name='Oct' ordinal='10' />
                <column datatype='real' name='Nov' ordinal='11' />
                <column datatype='real' name='Dec' ordinal='12' />
                <column datatype='real' name='Annual' ordinal='13' />
              </columns>
            </relation>
          </relation>
          <relation name='Sheet1 (2)' table='[&apos;Sheet1 (2)$&apos;]' type='table'>
            <columns gridOrigin='A1:D926:no:A1:D926:1' lost='0' outcome='1' processed='1836'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='string' name='Abbr' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Price per barrel' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ADgas_prod_MCF]' value='[ALL_STATES_ALL_YRS_BOE1].[ADgas_prod_MCF]' />
          <map key='[Abbr (Sheet1 (2))]' value='[Sheet1 (2)].[Abbr]' />
          <map key='[Abbr]' value='[ALL_STATES_ALL_YRS_BOE1].[Abbr]' />
          <map key='[All Petroleum Products Total Consumption (Thousand Barrels)]' value='[Consolidated].[All Petroleum Products Total Consumption (Thousand Barrels)]' />
          <map key='[Annual]' value='[BLS Data Series].[Annual]' />
          <map key='[Apr]' value='[BLS Data Series].[Apr]' />
          <map key='[Aug]' value='[BLS Data Series].[Aug]' />
          <map key='[Crude Oil Production (Thousand Barrels)]' value='[Consolidated].[Crude Oil Production (Thousand Barrels)]' />
          <map key='[Dec]' value='[BLS Data Series].[Dec]' />
          <map key='[Demand]' value='[Consolidated].[Demand]' />
          <map key='[Difference in Supply and Demand]' value='[Consolidated].[Difference in Supply and Demand]' />
          <map key='[Feb]' value='[BLS Data Series].[Feb]' />
          <map key='[Jan]' value='[BLS Data Series].[Jan]' />
          <map key='[Jul]' value='[BLS Data Series].[Jul]' />
          <map key='[Jun]' value='[BLS Data Series].[Jun]' />
          <map key='[Mar]' value='[BLS Data Series].[Mar]' />
          <map key='[May]' value='[BLS Data Series].[May]' />
          <map key='[NAgas_prod_MCF]' value='[ALL_STATES_ALL_YRS_BOE1].[NAgas_prod_MCF]' />
          <map key='[Nov]' value='[BLS Data Series].[Nov]' />
          <map key='[Number of Oil Wells]' value='[ALL_STATES_ALL_YRS_BOE1].[Number of Oil Wells]' />
          <map key='[Oct]' value='[BLS Data Series].[Oct]' />
          <map key='[Price per barrel]' value='[Sheet1 (2)].[Price per barrel]' />
          <map key='[Proportion]' value='[Consolidated].[Proportion]' />
          <map key='[Sep]' value='[BLS Data Series].[Sep]' />
          <map key='[State]' value='[Sheet1 (2)].[State]' />
          <map key='[Supply]' value='[Consolidated].[Supply]' />
          <map key='[U.S. Crude Oil First Purchase Price, Annual]' value='[Consolidated].[U.S. Crude Oil First Purchase Price, Annual]' />
          <map key='[U.S. Exports of Crude Oil (Thousand Barrels)]' value='[Consolidated].[U.S. Exports of Crude Oil (Thousand Barrels)]' />
          <map key='[U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)]' value='[Consolidated].[U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)]' />
          <map key='[Year (BLS Data Series)]' value='[BLS Data Series].[Year]' />
          <map key='[Year (Consolidated)]' value='[Consolidated].[Year]' />
          <map key='[Year (Sheet1 (2))]' value='[Sheet1 (2)].[Year]' />
          <map key='[Year]' value='[ALL_STATES_ALL_YRS_BOE1].[Year]' />
          <map key='[conden_prod_BBL]' value='[ALL_STATES_ALL_YRS_BOE1].[conden_prod_BBL]' />
          <map key='[gas_wells_dayson]' value='[ALL_STATES_ALL_YRS_BOE1].[gas_wells_dayson]' />
          <map key='[num_gas_wells]' value='[ALL_STATES_ALL_YRS_BOE1].[num_gas_wells]' />
          <map key='[oil_prod_BBL]' value='[ALL_STATES_ALL_YRS_BOE1].[oil_prod_BBL]' />
          <map key='[oil_wells_dayson]' value='[ALL_STATES_ALL_YRS_BOE1].[oil_wells_dayson]' />
          <map key='[rate_class]' value='[ALL_STATES_ALL_YRS_BOE1].[rate_class]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Abbr</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Abbr]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>Abbr</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rate_class</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rate_class]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>rate_class</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Oil Wells</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Oil Wells]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>Number of Oil Wells</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_prod_BBL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[oil_prod_BBL]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>oil_prod_BBL</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADgas_prod_MCF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ADgas_prod_MCF]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>ADgas_prod_MCF</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_wells_dayson</remote-name>
            <remote-type>20</remote-type>
            <local-name>[oil_wells_dayson]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>oil_wells_dayson</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_gas_wells</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_gas_wells]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>num_gas_wells</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAgas_prod_MCF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NAgas_prod_MCF]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>NAgas_prod_MCF</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conden_prod_BBL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[conden_prod_BBL]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>conden_prod_BBL</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_wells_dayson</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gas_wells_dayson]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias>gas_wells_dayson</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ALL_STATES_ALL_YRS_BOE1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K10001:no:A1:K10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Consolidated)]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Crude Oil First Purchase Price, Annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[U.S. Crude Oil First Purchase Price, Annual]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>U.S. Crude Oil First Purchase Price, Annual</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crude Oil Production (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crude Oil Production (Thousand Barrels)]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Crude Oil Production (Thousand Barrels)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Supply</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Supply]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Supply</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Exports of Crude Oil (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[U.S. Exports of Crude Oil (Thousand Barrels)]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>U.S. Exports of Crude Oil (Thousand Barrels)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>All Petroleum Products Total Consumption (Thousand Barrels)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[All Petroleum Products Total Consumption (Thousand Barrels)]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>All Petroleum Products Total Consumption (Thousand Barrels)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Demand</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Demand]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Demand</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Difference in Supply and Demand</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Difference in Supply and Demand]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Difference in Supply and Demand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Proportion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Proportion]</local-name>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias>Proportion</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Consolidated]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J34:no:A1:J34:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (BLS Data Series)]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jan</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jan]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Jan</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Feb]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Feb</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mar]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Mar</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apr</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apr]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Apr</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>May</remote-name>
            <remote-type>5</remote-type>
            <local-name>[May]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>May</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jun</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jun]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Jun</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jul</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Jul]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Jul</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aug]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Aug</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sep]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Sep</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oct]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Oct</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nov</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nov]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Nov</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dec]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Dec</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual]</local-name>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias>Annual</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[BLS Data Series]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N40:no:A1:N40:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>534</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Abbr</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Abbr (Sheet1 (2))]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Abbr</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Sheet1 (2))]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price per barrel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price per barrel]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Price per barrel</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D926:no:A1:D926:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1836</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[Abbr (Sheet1)]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[All Petroleum Products Total Consumption (Thousand Barrels)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Apr]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Aug]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Dec]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Demand]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Feb]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Jan]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Jul]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Jun]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Mar]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[May]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Nov]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Oil Wells]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' hidden='true' name='[Oct]' role='measure' type='quantitative' />
      <column datatype='real' name='[Price per barrel]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Sep]' role='measure' type='quantitative' />
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Supply]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[U.S. Crude Oil First Purchase Price, Annual]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[U.S. Exports of Crude Oil (Thousand Barrels)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[U.S. Imports of Crude Oil and Petroleum Products (Thousand Barrels)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year (BLS Data Series)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (Consolidated)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (Sheet1 (2))]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[oil_prod_BBL]' role='measure' type='quantitative' />
      <column-instance column='[Demand]' derivation='Avg' name='[avg:Demand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price per barrel]' derivation='Avg' name='[avg:Price per barrel:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Supply]' derivation='Avg' name='[avg:Supply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Oil Wells]' derivation='Sum' name='[sum:Number of Oil Wells:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price per barrel]' derivation='Sum' name='[sum:Price per barrel:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_prod_BBL]' derivation='Sum' name='[sum:oil_prod_BBL:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.654255' measure-ordering='alphabetic' measure-percentage='0.345745' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:oil_prod_BBL:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[avg:Demand:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[avg:Supply:qk]&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:Number of Oil Wells:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:Price per barrel:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[avg:Price per barrel:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Supply vs Demand 1 (2) (2)' inline='true' name='excel-direct.1ea1drr1mjlbi919tswex1a6uzec (copy)' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='US Gas Prices' table='[&apos;US Gas Prices$&apos;]' type='table'>
          <columns gridOrigin='A1:B157:no:A1:B157:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='real' name='U.S. Crude Oil First Purchase Price, Annual' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[US Gas Prices]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Crude Oil First Purchase Price, Annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[U.S. Crude Oil First Purchase Price, Annual]</local-name>
            <parent-name>[US Gas Prices]</parent-name>
            <remote-alias>U.S. Crude Oil First Purchase Price, Annual</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US Gas Prices]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B157:no:A1:B157:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.490909' measure-ordering='alphabetic' measure-percentage='0.509091' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='US Gas Prices (Supply vs Demand 1)' inline='true' name='excel-direct.0f2y3co0si71k710l0xrd0i5z0ty' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='US Gas Prices' table='[&apos;US Gas Prices$&apos;]' type='table'>
          <columns gridOrigin='A1:B157:no:A1:B157:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='real' name='U.S. Crude Oil First Purchase Price, Annual' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[US Gas Prices]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U.S. Crude Oil First Purchase Price, Annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[U.S. Crude Oil First Purchase Price, Annual]</local-name>
            <parent-name>[US Gas Prices]</parent-name>
            <remote-alias>U.S. Crude Oil First Purchase Price, Annual</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US Gas Prices]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B157:no:A1:B157:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.447154' measure-ordering='alphabetic' measure-percentage='0.552846' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Saudi Production (Supply vs Demand 1)' inline='true' name='excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='Saudi Production' table='[&apos;Saudi Production$&apos;]' type='table'>
          <columns gridOrigin='A1:J36:no:A1:J36:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='United States Thousand Barrels Per Day' ordinal='1' />
            <column datatype='integer' name='Saudi Arabia Thousand Barrels Per Day' ordinal='2' />
            <column datatype='real' name='%ChangeSaudi' ordinal='3' />
            <column datatype='integer' name='Russia Thousand Barrels Per Day' ordinal='4' />
            <column datatype='integer' name='China Thousand Barrels Per Day' ordinal='5' />
            <column datatype='integer' name='Canada Thousand Barrels Per Day' ordinal='6' />
            <column datatype='integer' name='United Arab Emirates Thousand Barrels Per Day' ordinal='7' />
            <column datatype='real' name='Price' ordinal='8' />
            <column datatype='real' name='%ChangePrice' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>United States Thousand Barrels Per Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[United States Thousand Barrels Per Day]</local-name>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias>United States Thousand Barrels Per Day</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Saudi Arabia Thousand Barrels Per Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Saudi Arabia Thousand Barrels Per Day]</local-name>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias>Saudi Arabia Thousand Barrels Per Day</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>%ChangeSaudi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[%ChangeSaudi]</local-name>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias>%ChangeSaudi</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Russia Thousand Barrels Per Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Russia Thousand Barrels Per Day]</local-name>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias>Russia Thousand Barrels Per Day</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>China Thousand Barrels Per Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[China Thousand Barrels Per Day]</local-name>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias>China Thousand Barrels Per Day</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Canada Thousand Barrels Per Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Canada Thousand Barrels Per Day]</local-name>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias>Canada Thousand Barrels Per Day</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>United Arab Emirates Thousand Barrels Per Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[United Arab Emirates Thousand Barrels Per Day]</local-name>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias>United Arab Emirates Thousand Barrels Per Day</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>%ChangePrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[%ChangePrice]</local-name>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias>%ChangePrice</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Saudi Production]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J36:no:A1:J36:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.179817' measure-ordering='alphabetic' measure-percentage='0.820184' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='BLS Data Series (Gas Price) (2)' inline='true' name='excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='BLS Data Series (2)' table='[&apos;BLS Data Series (2)$&apos;]' type='table'>
          <columns gridOrigin='A1:E458:no:A1:E458:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='integer' name='Day' ordinal='2' />
            <column datatype='date' name='Date' ordinal='3' />
            <column datatype='real' name='End User Gas Prices' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[BLS Data Series (2)]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[BLS Data Series (2)]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[BLS Data Series (2)]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[BLS Data Series (2)]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End User Gas Prices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[End User Gas Prices]</local-name>
            <parent-name>[BLS Data Series (2)]</parent-name>
            <remote-alias>End User Gas Prices</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[BLS Data Series (2)]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E458:no:A1:E458:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.550459' measure-ordering='alphabetic' measure-percentage='0.449541' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (consumPro)' inline='true' name='excel-direct.0vain4s1ooujsh1e53jbp1kaisdk' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='Sheet1 (3)' table='[&apos;Sheet1 (3)$&apos;]' type='table'>
          <columns gridOrigin='A1:E2755:no:A1:E2755:0' header='yes' outcome='6'>
            <column datatype='string' name='StateCode' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='integer' name='Consumption' ordinal='3' />
            <column datatype='integer' name='Production' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>StateCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StateCode]</local-name>
            <parent-name>[Sheet1 (3)]</parent-name>
            <remote-alias>StateCode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1 (3)]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1 (3)]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Consumption]</local-name>
            <parent-name>[Sheet1 (3)]</parent-name>
            <remote-alias>Consumption</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Production</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Production]</local-name>
            <parent-name>[Sheet1 (3)]</parent-name>
            <remote-alias>Production</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1 (3)]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E2755:no:A1:E2755:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Production]' role='measure' type='quantitative' />
      <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Production]' derivation='Sum' name='[sum:Production:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.414679' measure-ordering='alphabetic' measure-percentage='0.585321' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.1wwima204s9yqg1g4lvua0o0mnq7].[sum:U.S. Crude Oil First Purchase Price, Annual:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Consumption:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.0f2y3co0si71k710l0xrd0i5z0ty].[sum:U.S. Crude Oil First Purchase Price, Annual:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.1ea1drr1mjlbi919tswex1a6uzec (copy)].[sum:U.S. Crude Oil First Purchase Price, Annual:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Production:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='excel-direct.0f2y3co0si71k710l0xrd0i5z0ty'>
        <column datatype='real' name='[U.S. Crude Oil First Purchase Price, Annual]' role='measure' type='quantitative' />
        <column-instance column='[U.S. Crude Oil First Purchase Price, Annual]' derivation='Sum' name='[sum:U.S. Crude Oil First Purchase Price, Annual:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='excel-direct.1wwima204s9yqg1g4lvua0o0mnq7'>
        <column datatype='real' name='[U.S. Crude Oil First Purchase Price, Annual]' role='measure' type='quantitative' />
        <column-instance column='[U.S. Crude Oil First Purchase Price, Annual]' derivation='Sum' name='[sum:U.S. Crude Oil First Purchase Price, Annual:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='ALL_STATES_ALL_YRS_BOE (all-years-states)' inline='true' name='excel-direct.16rykse1y4qm6s18gi5ij18mzb83' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='ALL_STATES_ALL_YRS_BOE (2)' table='[&apos;ALL_STATES_ALL_YRS_BOE (2)$&apos;]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='6'>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='integer' name='prod_year' ordinal='1' />
            <column datatype='integer' name='rate_class' ordinal='2' />
            <column datatype='integer' name='num_oil_wells' ordinal='3' />
            <column datatype='integer' name='oil_prod_BBL' ordinal='4' />
            <column datatype='integer' name='ADgas_prod_MCF' ordinal='5' />
            <column datatype='integer' name='oil_wells_dayson' ordinal='6' />
            <column datatype='integer' name='num_gas_wells' ordinal='7' />
            <column datatype='integer' name='NAgas_prod_MCF' ordinal='8' />
            <column datatype='integer' name='conden_prod_BBL' ordinal='9' />
            <column datatype='integer' name='gas_wells_dayson' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prod_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prod_year]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>prod_year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rate_class</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rate_class]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>rate_class</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_oil_wells</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_oil_wells]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>num_oil_wells</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_prod_BBL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[oil_prod_BBL]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>oil_prod_BBL</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADgas_prod_MCF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ADgas_prod_MCF]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>ADgas_prod_MCF</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_wells_dayson</remote-name>
            <remote-type>20</remote-type>
            <local-name>[oil_wells_dayson]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>oil_wells_dayson</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_gas_wells</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_gas_wells]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>num_gas_wells</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAgas_prod_MCF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NAgas_prod_MCF]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>NAgas_prod_MCF</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conden_prod_BBL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[conden_prod_BBL]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>conden_prod_BBL</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_wells_dayson</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gas_wells_dayson]</local-name>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias>gas_wells_dayson</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ALL_STATES_ALL_YRS_BOE (2)]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K10001:no:A1:K10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ADgas prod MCF' datatype='integer' name='[ADgas_prod_MCF]' role='measure' type='quantitative' />
      <column caption='Days Active' datatype='real' name='[Calculation_1910089247299895298]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[oil_wells_dayson]/[num_oil_wells]' />
      </column>
      <column caption='NAgas prod MCF' datatype='integer' name='[NAgas_prod_MCF]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='conden prod BBL' datatype='integer' name='[conden_prod_BBL]' role='measure' type='quantitative' />
      <column caption='Gas Wells Dayson' datatype='integer' name='[gas_wells_dayson]' role='measure' type='quantitative' />
      <column caption='Num Gas Wells' datatype='integer' name='[num_gas_wells]' role='measure' type='quantitative' />
      <column caption='Num Oil Wells' datatype='integer' name='[num_oil_wells]' role='measure' type='quantitative' />
      <column caption='oil prod BBL' datatype='integer' name='[oil_prod_BBL]' role='measure' type='quantitative' />
      <column caption='Oil Wells Dayson' datatype='integer' name='[oil_wells_dayson]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Prod Year' datatype='integer' name='[prod_year]' role='dimension' type='quantitative' />
      <column caption='Rate Class' datatype='integer' name='[rate_class]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Calculation_1910089247299895298]' derivation='Avg' name='[avg:Calculation_1910089247299895298:ok]' pivot='key' type='ordinal' />
      <column-instance column='[num_oil_wells]' derivation='Avg' name='[avg:num_oil_wells:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_prod_BBL]' derivation='Avg' name='[avg:oil_prod_BBL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_wells_dayson]' derivation='Avg' name='[avg:oil_wells_dayson:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[num_gas_wells]' derivation='Sum' name='[sum:num_gas_wells:qk]' pivot='key' type='quantitative' />
      <column-instance column='[num_oil_wells]' derivation='Sum' name='[sum:num_oil_wells:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_prod_BBL]' derivation='Sum' name='[sum:oil_prod_BBL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_wells_dayson]' derivation='Sum' name='[sum:oil_wells_dayson:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.154255' measure-ordering='alphabetic' measure-percentage='0.845745' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;FP&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;FG&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:oil_prod_BBL:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:num_gas_wells:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:gas_wells_dayson:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:oil_prod_BBL:qk]:1&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:Number of Oil Wells:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[avg:Price per barrel:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:Price per barrel:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:oil_prod_BBL:qk]&quot;</bucket>
            </map>
            <map to='#e35846'>
              <bucket>&quot;[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:oil_wells_dayson:qk]&quot;</bucket>
            </map>
            <map to='#e35846'>
              <bucket>&quot;[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:num_oil_wells:qk]&quot;</bucket>
            </map>
            <map to='#e35846'>
              <bucket>&quot;[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:oil_wells_dayson:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[excel-direct.16rykse1y4qm6s18gi5ij18mzb83]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:num_oil_wells:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:oil_prod_BBL:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[avg:Calculation_1910089247299895298:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>161759.35289242963</bucket>
            </map>
            <map to='#1c5896'>
              <bucket>341.36028478442734</bucket>
            </map>
            <map to='#1c5d9c'>
              <bucket>341.1775748101698</bucket>
            </map>
            <map to='#1c62a0'>
              <bucket>340.34011726189402</bucket>
            </map>
            <map to='#1c67a5'>
              <bucket>340.1231509407246</bucket>
            </map>
            <map to='#1c6caa'>
              <bucket>339.22320580145731</bucket>
            </map>
            <map to='#1c71af'>
              <bucket>338.85545199640501</bucket>
            </map>
            <map to='#1e548e'>
              <bucket>341.67294595272136</bucket>
            </map>
            <map to='#1f75b1'>
              <bucket>338.7305700355459</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>139145.6341325375</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>162276.66623359174</bucket>
            </map>
            <map to='#205086'>
              <bucket>341.98594691845585</bucket>
            </map>
            <map to='#224c7e'>
              <bucket>342.7214815034659</bucket>
            </map>
            <map to='#244876'>
              <bucket>342.80120982820819</bucket>
            </map>
            <map to='#2579b2'>
              <bucket>338.20539465140962</bucket>
            </map>
            <map to='#26456e'>
              <bucket>343.0768744411684</bucket>
            </map>
            <map to='#2b7db4'>
              <bucket>338.07638798664942</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>150515.06269867378</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>163424.05833407133</bucket>
            </map>
            <map to='#3181b5'>
              <bucket>338.05057341990573</bucket>
            </map>
            <map to='#3785b6'>
              <bucket>337.71969683509678</bucket>
            </map>
            <map to='#3e8ab9'>
              <bucket>337.3837102624787</bucket>
            </map>
            <map to='#4792bf'>
              <bucket>336.55793098601242</bucket>
            </map>
            <map to='#4f99c5'>
              <bucket>336.2946370834793</bucket>
            </map>
            <map to='#58a0ca'>
              <bucket>335.68145328170493</bucket>
            </map>
            <map to='#61a8d0'>
              <bucket>335.17060076533602</bucket>
            </map>
            <map to='#68aed4'>
              <bucket>334.83937879273009</bucket>
            </map>
            <map to='#6cb3d7'>
              <bucket>334.47791710816392</bucket>
            </map>
            <map to='#70b9da'>
              <bucket>333.76413028262414</bucket>
            </map>
            <map to='#73bedd'>
              <bucket>333.26146629121399</bucket>
            </map>
            <map to='#77c3df'>
              <bucket>330.96358478340187</bucket>
            </map>
            <map to='#7cc8e1'>
              <bucket>330.75518248584342</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>160780.69413346527</bucket>
            </map>
            <map to='#87cae0'>
              <bucket>330.48411755842528</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>159293.344663161</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>165708.34642540757</bucket>
            </map>
            <map to='#92cdde'>
              <bucket>329.77636157388366</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>156682.43628751172</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>164724.61675475672</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>150634.18276362872</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>163939.35875342926</bucket>
            </map>
            <map to='#9dcfdd'>
              <bucket>329.11855453011884</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>162148.69237309659</bucket>
            </map>
            <map to='#a8d1db'>
              <bucket>325.06729520230647</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>143788.18772832915</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>162430.3097113205</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>322.09637530679976</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>161606.7972157273</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>159865.0172183559</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>166474.68314605113</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>158716.96015046039</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>164888.39581958955</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>161127.09757521836</bucket>
            </map>
            <map to='#d62728'>
              <bucket>151751.29537592456</bucket>
            </map>
            <map to='#d62728'>
              <bucket>164006.03876626003</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>161662.1786433738</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>160244.61165182633</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>160388.06244171772</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>144009.54427687984</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>162961.51535955499</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>156535.37710255073</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>164506.31112166363</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>150378.02087769096</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>163118.61357135174</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf'>
        <column datatype='integer' name='[Number of Oil Wells]' role='measure' type='quantitative' />
        <column datatype='real' name='[Price per barrel]' role='measure' type='quantitative' />
        <column-instance column='[Price per barrel]' derivation='Avg' name='[avg:Price per barrel:qk]' pivot='key' type='quantitative' />
        <column datatype='integer' name='[oil_prod_BBL]' role='measure' type='quantitative' />
        <column-instance column='[Number of Oil Wells]' derivation='Sum' name='[sum:Number of Oil Wells:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Price per barrel]' derivation='Sum' name='[sum:Price per barrel:qk]' pivot='key' type='quantitative' />
        <column-instance column='[oil_prod_BBL]' derivation='Sum' name='[sum:oil_prod_BBL:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='patcp (patcp)' inline='true' name='excel-direct.1c7toe21pj7do311gy6b50198bjl' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='patcp' table='[patcp$]' type='table'>
          <columns gridOrigin='A1:D2755:no:A1:D2755:0' header='yes' outcome='6'>
            <column datatype='string' name='StateCode' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='integer' name='Data' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>StateCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StateCode]</local-name>
            <parent-name>[patcp]</parent-name>
            <remote-alias>StateCode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[patcp]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[patcp]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Data]</local-name>
            <parent-name>[patcp]</parent-name>
            <remote-alias>Data</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[patcp]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D2755:no:A1:D2755:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Data]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[StateCode]' derivation='None' name='[none:StateCode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Data]' derivation='Sum' name='[sum:Data:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.475229' measure-ordering='alphabetic' measure-percentage='0.524771' rowDisplayCount='3000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:StateCode:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.1gxrsqr0vlbkp114noj9q126xft5].[sum:Total US Consumption:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order='descending' field-sort-order-type='alphabetical-order' />
      <datasource-dependencies datasource='excel-direct.1gxrsqr0vlbkp114noj9q126xft5'>
        <column datatype='integer' name='[Total US Consumption]' role='measure' type='quantitative' />
        <column-instance column='[Total US Consumption]' derivation='Sum' name='[sum:Total US Consumption:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sheet3 (patcp(2))' inline='true' name='excel-direct.1gxrsqr0vlbkp114noj9q126xft5' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='patcp' table='[patcp$]' type='table'>
          <columns gridOrigin='A1:D2755:no:A1:D2755:0' header='yes' outcome='6'>
            <column datatype='string' name='StateCode' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='integer' name='Data' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>StateCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StateCode]</local-name>
            <parent-name>[patcp]</parent-name>
            <remote-alias>StateCode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[patcp]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[patcp]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Data]</local-name>
            <parent-name>[patcp]</parent-name>
            <remote-alias>Data</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[patcp]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D2755:no:A1:D2755:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' type='nominal' />
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Total US Consumption]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Total US Consumption]' derivation='Sum' name='[sum:Total US Consumption:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.417417' measure-ordering='alphabetic' measure-percentage='0.582583' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.1gxrsqr0vlbkp114noj9q126xft5].[sum:Total US Consumption:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='excel-direct.1c7toe21pj7do311gy6b50198bjl'>
        <column datatype='integer' name='[Data]' role='measure' type='quantitative' />
        <column-instance column='[Data]' derivation='Sum' name='[sum:Data:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sheet3 (patcp(2)) (2)' inline='true' name='excel-direct.1gxrsqr0vlbkp114noj9q126xft5 (copy)' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\UTD\4 Sem Data Visualization\Project\Final\Supply vs Demand 1.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='Sheet3' table='[Sheet3$]' type='table'>
          <columns gridOrigin='A1:D55:no:A1:D55:0' header='yes' outcome='6'>
            <column datatype='string' name='x' ordinal='0' />
            <column datatype='string' name='y' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='integer' name='Total US Consumption' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>130</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>130</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total US Consumption</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total US Consumption]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>Total US Consumption</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D55:no:A1:D55:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Total US Consumption]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='X' datatype='string' name='[x]' role='dimension' type='nominal' />
      <column caption='Y' datatype='string' name='[y]' role='dimension' type='nominal' />
      <column-instance column='[Total US Consumption]' derivation='Sum' name='[sum:Total US Consumption:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.501502' measure-ordering='alphabetic' measure-percentage='0.498498' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.1gxrsqr0vlbkp114noj9q126xft5 (copy)].[sum:Total US Consumption:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='excel-direct.1c7toe21pj7do311gy6b50198bjl'>
        <column datatype='integer' name='[Data]' role='measure' type='quantitative' />
        <column-instance column='[Data]' derivation='Sum' name='[sum:Data:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='excel-direct.0f2y3co0si71k710l0xrd0i5z0ty'>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.0vain4s1ooujsh1e53jbp1kaisdk'>
      <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='excel-direct.0vain4s1ooujsh1e53jbp1kaisdk' target='excel-direct.0f2y3co0si71k710l0xrd0i5z0ty'>
      <column-mapping>
        <map key='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:ok]' value='[excel-direct.0f2y3co0si71k710l0xrd0i5z0ty].[none:Year:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='excel-direct.08k6cz40lri1cy1bfsjq700lf7hw'>
      <datasources>
        <datasource caption='Sheet1 (con_pro)' name='excel-direct.08k6cz40lri1cy1bfsjq700lf7hw' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.08k6cz40lri1cy1bfsjq700lf7hw'>
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:Year:qk]' included-values='in-range'>
        <min>1996</min>
        <max>2013</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Imports From OPEC' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Imports From OPEC' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Imports From OPEC' type='sheet' worksheet='Saudi Production' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Imports From OPEC' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='% change of import'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Arial'>% change of imports before and after 2001</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (New Imports)' name='excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn'>
            <column caption='%Change From 2001' datatype='real' name='[%change from 2001]' role='measure' type='quantitative' />
            <column caption='Origin1' datatype='string' name='[Origin]' role='dimension' type='nominal' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[%change from 2001]' derivation='Sum' name='[sum:%change from 2001:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Origin:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Origin:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Origin:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Origin:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Origin:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Origin:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Origin:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Origin:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Origin:nk]' member='&quot;Venezula&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[sum:%change from 2001:qk]' field-type='quantitative' max='200.0' min='-200.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[sum:%change from 2001:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[sum:%change from 2001:qk]' scope='rows' value='true' />
            <format attr='height' field='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Origin:nk]' value='10' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Origin:nk]' value='34' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Origin:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Origin:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[sum:%change from 2001:qk]</rows>
        <cols>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Origin:nk]</cols>
        <pages>
          <column>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='C vs P - Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial' fontsize='16'>Price Elasticity of Crude Oil Across U.S.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (consumPro)' name='excel-direct.0vain4s1ooujsh1e53jbp1kaisdk' />
            <datasource caption='US Gas Prices (Supply vs Demand 1)' name='excel-direct.0f2y3co0si71k710l0xrd0i5z0ty' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0f2y3co0si71k710l0xrd0i5z0ty'>
            <column datatype='real' name='[U.S. Crude Oil First Purchase Price, Annual]' role='measure' type='quantitative' />
            <column-instance column='[U.S. Crude Oil First Purchase Price, Annual]' derivation='Sum' name='[sum:U.S. Crude Oil First Purchase Price, Annual:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.0vain4s1ooujsh1e53jbp1kaisdk'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Production]' role='measure' type='quantitative' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Production]' derivation='Sum' name='[sum:Production:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Production:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Production:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[excel-direct.0f2y3co0si71k710l0xrd0i5z0ty].[sum:U.S. Crude Oil First Purchase Price, Annual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[:Measure Names]' />
              <text column='[excel-direct.0f2y3co0si71k710l0xrd0i5z0ty].[sum:U.S. Crude Oil First Purchase Price, Annual:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Consumption:qk] + ([excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Production:qk] + [excel-direct.0f2y3co0si71k710l0xrd0i5z0ty].[sum:U.S. Crude Oil First Purchase Price, Annual:qk]))</rows>
        <cols>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Production:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]</field>
                  <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Production:qk]</field>
                  <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1970</value>
                <value>3517450</value>
                <value>&quot;[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Production:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Consumption:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]</field>
                  <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Consumption:qk]</field>
                  <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2004</value>
                <value>7587604</value>
                <value>&quot;[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[sum:Consumption:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Consumption'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>All Refined Petroleum Products Total Consumption</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='patcp (patcp)' name='excel-direct.1c7toe21pj7do311gy6b50198bjl' />
            <datasource caption='Sheet3 (patcp(2)) (2)' name='excel-direct.1gxrsqr0vlbkp114noj9q126xft5 (copy)' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1c7toe21pj7do311gy6b50198bjl'>
            <column datatype='integer' name='[Data]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data]' derivation='Sum' name='[sum:Data:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.1gxrsqr0vlbkp114noj9q126xft5 (copy)'>
            <column datatype='integer' name='[Total US Consumption]' role='measure' type='quantitative' />
            <column-instance column='[Total US Consumption]' derivation='Sum' name='[sum:Total US Consumption:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1gxrsqr0vlbkp114noj9q126xft5 (copy)].[sum:Total US Consumption:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='title' class='0' field='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk]' scope='rows' value='State-wise Oil Consumption (Thousand Barrels)' />
            <format attr='subtitle' class='0' field='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:State:nk]' />
              <text column='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.66966849565505981' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[excel-direct.1gxrsqr0vlbkp114noj9q126xft5 (copy)].[sum:Total US Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-color' value='#acacac' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1c7toe21pj7do311gy6b50198bjl].[sum:Data:qk] + [excel-direct.1gxrsqr0vlbkp114noj9q126xft5 (copy)].[sum:Total US Consumption:qk])</rows>
        <cols>[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:Year:qk]</cols>
        <page-trail-options enabled='true' end='0' line-stroke-width='1' lines='true' mark-type='all' start='0' />
      </table>
    </worksheet>
    <worksheet name='Gas Price vs crude oil price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial' fontsize='16'>Crude Oil Price vs Gaosline Price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='BLS Data Series (Gas Price)' name='excel-direct.0dwdace0y2ldw017fxiz502st6uf' />
            <datasource caption='(DV-case_study)' name='excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0dwdace0y2ldw017fxiz502st6uf'>
            <column datatype='real' name='[Annual]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Annual]' derivation='Sum' name='[sum:Annual:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf'>
            <column datatype='real' name='[Price per barrel]' role='measure' type='quantitative' />
            <column-instance column='[Price per barrel]' derivation='Sum' name='[sum:Price per barrel:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[none:Year:ok]'>
            <groupfilter from='1980' function='range' level='[none:Year:ok]' to='2009' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[sum:Annual:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:Price per barrel:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Bar' />
            <encodings>
              <size column='[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:Price per barrel:qk]' />
              <color column='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[sum:Annual:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Line' />
            <encodings>
              <size column='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[sum:Annual:qk]' />
              <color column='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:Price per barrel:qk] + [excel-direct.0dwdace0y2ldw017fxiz502st6uf].[sum:Annual:qk])</rows>
        <cols>[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Number of Barrels produced'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Crude Oil Produced vs. Number Oil Wells in the US</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ALL_STATES_ALL_YRS_BOE (all-years-states)' name='excel-direct.16rykse1y4qm6s18gi5ij18mzb83' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.16rykse1y4qm6s18gi5ij18mzb83'>
            <column caption='Days Active' datatype='real' name='[Calculation_1910089247299895298]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[oil_wells_dayson]/[num_oil_wells]' />
            </column>
            <column-instance column='[Calculation_1910089247299895298]' derivation='Avg' name='[avg:Calculation_1910089247299895298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[prod_year]' derivation='None' name='[none:prod_year:qk]' pivot='key' type='quantitative' />
            <column caption='Num Oil Wells' datatype='integer' name='[num_oil_wells]' role='measure' type='quantitative' />
            <column caption='oil prod BBL' datatype='integer' name='[oil_prod_BBL]' role='measure' type='quantitative' />
            <column caption='Oil Wells Dayson' datatype='integer' name='[oil_wells_dayson]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Prod Year' datatype='integer' name='[prod_year]' role='dimension' type='quantitative' />
            <column-instance column='[num_oil_wells]' derivation='Sum' name='[sum:num_oil_wells:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_prod_BBL]' derivation='Sum' name='[sum:oil_prod_BBL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[none:prod_year:qk]' included-values='in-range'>
            <min>1978</min>
            <max>2009</max>
          </filter>
          <slices>
            <column>[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[none:prod_year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:oil_prod_BBL:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:oil_prod_BBL:qk]' scope='rows' value='Thousand Barrels of Oil' />
            <format attr='subtitle' class='0' field='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:oil_prod_BBL:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:oil_prod_BBL:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:num_oil_wells:qk]' scope='rows' value='No. of Oil Wells' />
            <format attr='subtitle' class='0' field='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:num_oil_wells:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:num_oil_wells:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:Calculation_1910089247299895298:qk]' palette='tableau-orange-blue' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:num_oil_wells:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:Calculation_1910089247299895298:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:oil_prod_BBL:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:num_oil_wells:qk] + [excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[sum:oil_prod_BBL:qk])</rows>
        <cols>[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[none:prod_year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Price trend line'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Arial' fontsize='16'>Planning a road trip for this Spring break ?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='BLS Data Series (Gas Price) (2)' name='excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)'>
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[End User Gas Prices]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='Attribute' name='[attr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[End User Gas Prices]' derivation='Sum' name='[sum:End User Gas Prices:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]' value='52' />
            <format attr='title' class='0' field='[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]' />
              <tooltip column='[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[attr:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</rows>
        <cols>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</field>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4.1420000000000003</value>
                <value>#2008-07-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</field>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1.742</value>
                <value>#2008-12-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</field>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3.9820000000000002</value>
                <value>#2011-05-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</field>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2.0339999999999998</value>
                <value>#2016-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]</field>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[tdy:Date:qk]</field>
                  <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[attr:Year:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1.2310000000000001</value>
                <value>#1980-12-01 00:00:00#</value>
                <value>1980</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Saudi Production'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Reducing Influence of Saudi Production on US Oil Prices</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Saudi Production (Supply vs Demand 1)' name='excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr'>
            <column datatype='real' name='[%ChangePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[%ChangeSaudi]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[%ChangePrice]' derivation='Sum' name='[sum:%ChangePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[%ChangeSaudi]' derivation='Sum' name='[sum:%ChangeSaudi:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangePrice:qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangePrice:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangeSaudi:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangeSaudi:qk]' scope='rows' value='%Change Saudi Arabia Oil Production' />
            <format attr='subtitle' class='0' field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangeSaudi:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangeSaudi:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangePrice:qk]' scope='rows' value='%Change in Price of US Oil' />
            <format attr='subtitle' class='0' field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangePrice:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangePrice:qk]' scope='rows' value='true' />
            <format attr='width' field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangePrice:qk]' value='68' />
            <format attr='width' field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangeSaudi:qk]' value='68' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangePrice:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangeSaudi:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangePrice:qk] + [excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[sum:%ChangeSaudi:qk])</rows>
        <cols>[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='import history'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Arial' fontsize='16'>Top 25 exporters of Crude oil to US(1993 - 2014)</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (New Imports)' name='excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn'>
            <column datatype='integer' name='[Import]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude1' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude1' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Path ID' datatype='string' name='[PathID]' role='dimension' type='nominal' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PathID]' derivation='None' name='[none:PathID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Import]' derivation='Sum' name='[sum:Import:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Longitude:qk]' field-type='quantitative' max='10788091.228500649' min='-34827005.914635867' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Latitude:qk]' field-type='quantitative' max='10448584.07668817' min='-9883190.5747401714' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[sum:Import:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Years'>
              <formatted-text>
                <run>Years</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[sum:Import:qk]' />
              <size column='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[sum:Import:qk]' />
              <lod column='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:PathID:nk]' />
              <path column='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='9.2114095687866211' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Latitude:qk]</rows>
        <cols>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Longitude:qk]</cols>
        <pages>
          <column>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='import_opec'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Declining imports of crude oil to US from OPEC nations</run>
            <run fontname='Arial' fontsize='10'>&#10;US import of crude oil from OPEC, Non OPEC and Persian gulf countries</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='import_opec' name='excel-direct.0vusrnn1ulm5371h376yf1gao78y' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0vusrnn1ulm5371h376yf1gao78y'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Opec' datatype='integer' name='[OPEC]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Persian Gulf Countries]' role='measure' type='quantitative' />
            <column-instance column='[OPEC]' derivation='Sum' name='[sum:OPEC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Persian Gulf Countries]' derivation='Sum' name='[sum:Persian Gulf Countries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[sum:OPEC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[sum:Persian Gulf Countries:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[Multiple Values]' scope='rows' value='Crude Oil(Thousand Barrel)' />
            <format attr='subtitle' class='0' field='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[Multiple Values]' scope='rows' value='true' />
            <format attr='height' field='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[:Measure Names]' value='11' />
            <encoding attr='space' class='0' field='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[Multiple Values]' field-type='quantitative' max='2291737.3500000001' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0984530448913574' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[Multiple Values]</rows>
        <cols>([excel-direct.0vusrnn1ulm5371h376yf1gao78y].[yr:Date:ok] / [excel-direct.0vusrnn1ulm5371h376yf1gao78y].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='production Vs consumption'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Arial' fontsize='16'>Texas Rules in Production &amp; Consumption of Crude Oil</run>
            <run fontalignment='1' fontcolor='#000000'>&#10;Yearly consumption and production of crude oil across US states</run>
            <run fontalignment='1' fontcolor='#000000' fontsize='16'>Æ  </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (con_pro)' name='excel-direct.08k6cz40lri1cy1bfsjq700lf7hw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.08k6cz40lri1cy1bfsjq700lf7hw'>
            <column datatype='integer' name='[Con/prod]' role='measure' type='quantitative' />
            <column datatype='string' name='[Oil Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Oil Mode]' derivation='None' name='[none:Oil Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Con/prod]' derivation='Sum' name='[sum:Con/prod:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Latitude (generated)]' field-type='quantitative' fold='true' max='6602146.0796123696' min='2877038.2603210853' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Longitude (generated)]' field-type='quantitative' max='-7503374.4575637821' min='-14108971.940527227' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Latitude (generated)]' field-type='quantitative' max='6602146.0796123696' min='2877038.2603210853' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <lod column='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:State:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:Oil Mode:nk]' />
              <size column='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[sum:Con/prod:qk]' />
              <lod column='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.5472970008850098' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Latitude (generated)] + [excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Latitude (generated)])</rows>
        <cols>[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='C vs P - number of oil wells'>
      <style />
      <zones>
        <zone h='39044' id='13' name='Number of Barrels produced' show-title='true' w='83344' x='2074' y='5361' />
        <zone h='51166' id='19' name='Consumption' show-title='true' w='85292' x='2074' y='47902' />
        <zone h='27739' id='24' name='Consumption' pane-specification-id='1' param='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:State:nk]' type='color' w='14016' x='87492' y='55361' />
        <zone h='10839' id='25' name='Number of Barrels produced' pane-specification-id='1' param='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:Calculation_1910089247299895298:qk]' type='color' w='9693' x='85993' y='5361' />
      </zones>
    </dashboard>
    <dashboard name='Db Consumption'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='90544' x='0' y='0'>
              <zone h='100000' id='1' name='Consumption' show-title='true' w='90544' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='9456' x='90544' y='0'>
              <zone h='32517' id='6' name='Consumption' pane-specification-id='1' param='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:State:nk]' type='color' w='9456' x='90544' y='0' />
              <zone h='13986' id='7' name='Consumption' type='currpage' w='9456' x='90544' y='32517' />
            </zone>
          </zone>
        </zone>
        <zone forceUpdate='true' h='7625' id='8' type='text' w='14700' x='62500' y='3125'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontsize='8'>2009 Gas Consumption drop: Driven by increasing gas prices !</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='4013' id='9' type='text' w='13602' x='26952' y='12876'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontsize='8'>1978: Iranian Revolution</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Db Production Vs Consumption'>
      <style />
      <size maxheight='800' maxwidth='1700' minheight='800' minwidth='1700' />
      <datasources>
        <datasource caption='Sheet1 (con_pro)' name='excel-direct.08k6cz40lri1cy1bfsjq700lf7hw' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.08k6cz40lri1cy1bfsjq700lf7hw'>
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='90588' x='0' y='0'>
              <zone h='100000' id='1' name='production Vs consumption' show-title='true' w='90588' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='9412' x='90588' y='0'>
              <zone h='9625' id='6' name='production Vs consumption' param='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='9412' x='90588' y='0' />
              <zone h='8750' id='7' name='production Vs consumption' pane-specification-id='2' param='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:Oil Mode:nk]' type='color' w='9412' x='90588' y='9625' />
              <zone h='13750' id='8' name='production Vs consumption' pane-specification-id='2' param='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[sum:Con/prod:qk]' type='size' w='9412' x='90588' y='18375' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Db_import_history'>
      <style />
      <size maxheight='900' maxwidth='1700' minheight='900' minwidth='1700' />
      <zones>
        <zone h='86556' id='1' name='import history' show-title='true' w='97059' x='-412' y='667' />
        <zone count='1' h='11000' id='8' name='import history' name1='% change of import' trailctrls='0' type='currpage' w='12647' x='77882' y='71778' />
        <zone h='6889' id='7' name='import history' pane-specification-id='0' param='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[sum:Import:qk]' type='color' w='8471' x='81412' y='7778' />
        <zone h='26444' id='9' name='% change of import' show-title='true' w='42118' x='8529' y='47778' />
      </zones>
    </dashboard>
    <dashboard name='Elasticity'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='90544' x='0' y='0'>
              <zone h='100000' id='1' name='C vs P - Price' show-title='true' w='90544' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='9456' x='90544' y='0'>
              <zone h='12936' id='6' name='C vs P - Price' pane-specification-id='2' param='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[:Measure Names]' type='color' w='9456' x='90544' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Imports From OPEC'>
      <style />
      <zones>
        <zone h='45455' id='1' name='Saudi Production' show-title='true' w='80733' x='2423' y='54895' />
        <zone h='51282' id='9' name='import_opec' show-title='true' w='82151' x='118' y='1632' />
        <zone h='8858' id='14' name='import_opec' pane-specification-id='0' param='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[:Measure Names]' type='color' w='13416' x='85225' y='24009' />
        <zone h='7809' id='15' name='Saudi Production' pane-specification-id='1' param='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[:Measure Names]' type='color' w='8688' x='87293' y='71329' />
      </zones>
    </dashboard>
    <dashboard name='Main Story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Factors influencing Gas Prices in US</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' hidden='true' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='7191' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='18228' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='7191' />
            <zone h='73912' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='25419'>
              <flipboard active-id='15' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Gas Price Trend Line' captured-sheet='db Price trend line' id='13' />
                  <story-point caption='Production &amp; Consumption of crude oil' captured-sheet='C vs P - number of oil wells' id='5' />
                  <story-point caption='Production Vs Consumtion' captured-sheet='Db Production Vs Consumption' id='6'>
                    <capturedDeltas>
                      <worksheet name='production Vs consumption'>
                        <filter class='quantitative' column='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:Year:qk]' included-values='in-range'>
                          <min>2004</min>
                          <max>2013</max>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Latitude (generated)]' field-type='quantitative' max='6920688.3117615283' min='1150848.4406594299' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='1' field='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Latitude (generated)]' field-type='quantitative' fold='true' max='6920688.3117615283' min='1150848.4406594299' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[Longitude (generated)]' field-type='quantitative' max='-4521953.3627701178' min='-17090491.855170835' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Top exporters of crude oil' captured-sheet='Db_import_history' id='7' />
                  <story-point caption='Crude Oil Price vs.' captured-sheet='db Gas Price vs crude oil price' id='14' />
                  <story-point caption='Imports from OPEC and Persian Gulf countries' captured-sheet='Imports From OPEC' id='9'>
                    <capturedDeltas>
                      <worksheet name='Saudi Production'>
                        <highlight field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[:Measure Names]'>
                          <bucket-selection />
                        </highlight>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Price Elasticity' captured-sheet='Elasticity' id='15'>
                    <capturedDeltas>
                      <worksheet name='C vs P - Price'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='horizontal'>
                              <node-reference>
                                <axis>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='db Gas Price vs crude oil price'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='90544' x='0' y='0'>
              <zone h='100000' id='1' name='Gas Price vs crude oil price' show-title='true' w='90544' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='9456' x='90544' y='0'>
              <zone h='10139' id='6' name='Gas Price vs crude oil price' pane-specification-id='1' param='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[:Measure Names]' type='color' w='9456' x='90544' y='0' />
              <zone h='20862' id='7' name='Gas Price vs crude oil price' pane-specification-id='2' param='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[sum:Annual:qk]' type='size' w='9456' x='90544' y='10139' />
              <zone h='15268' id='8' name='Gas Price vs crude oil price' pane-specification-id='1' param='[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:Price per barrel:qk]' type='size' w='9456' x='90544' y='31001' />
            </zone>
          </zone>
        </zone>
        <zone h='3497' id='9' type='text' w='14303' x='40130' y='52681'>
          <formatted-text>
            <run>Correlation Coefficient = 0.98</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='db Price trend line'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='90544' x='0' y='0'>
              <zone h='100000' id='1' name='Price trend line' show-title='true' w='90544' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='9456' x='90544' y='0'>
              <zone h='9906' id='6' name='Price trend line' pane-specification-id='0' param='[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]' type='color' w='9456' x='90544' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='231'>
    <window class='dashboard' maximized='true' name='Main Story'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='worksheet' name='Number of Barrels produced'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:Calculation_1910089247299895298:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[:Measure Names]</field>
            <field>[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[Multiple Values]</field>
            <field>[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:gas_wells_dayson:qk]</field>
            <field>[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:oil_wells_dayson:qk]</field>
            <field>[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[none:prod_year:ok]</field>
            <field>[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[none:prod_year:qk]</field>
            <field>[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[none:state:nk]</field>
            <field>[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[none:Year (Sheet1):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Gas Price vs crude oil price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[sum:Annual:qk]' type='size' />
            <card pane-specification-id='1' param='[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[sum:Price per barrel:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[:Measure Names]</field>
            <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[none:Year:ok]</field>
            <field>[excel-direct.1dvggmh1xuwk8r14uxr8k1wzalbf].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='db Gas Price vs crude oil price'>
      <viewpoints>
        <viewpoint name='Gas Price vs crude oil price'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='import_opec'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[:Measure Names]</field>
            <field>[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='production Vs consumption'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:Oil Mode:nk]' type='color' />
            <card pane-specification-id='2' param='[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[sum:Con/prod:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:Oil Mode:nk]</field>
            <field>[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Db Production Vs Consumption'>
      <viewpoints>
        <viewpoint name='production Vs consumption'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.08k6cz40lri1cy1bfsjq700lf7hw].[none:Oil Mode:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='import history'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[sum:Import:qk]' type='size' />
            <card pane-specification-id='0' param='[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[sum:Import:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2014</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:PathID:nk]</field>
            <field>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='% change of import'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2014</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Origin:nk]</field>
            <field>[excel-direct.0bdo6ii1qwiv1c12i11ef0yqgvtn].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Db_import_history'>
      <viewpoints>
        <viewpoint name='% change of import'>
          <current-page>
            <multibucket>
              <bucket>2014</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='import history'>
          <current-page>
            <multibucket>
              <bucket>2014</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Consumption'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:State:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:State:nk]</field>
            <field>[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:StateCode:nk]</field>
            <field>[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:Year:qk]</field>
            <field>[excel-direct.1gxrsqr0vlbkp114noj9q126xft5 (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Db Consumption'>
      <viewpoints>
        <viewpoint name='Consumption'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:State:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
    <window class='worksheet' name='C vs P - Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Elasticity'>
      <viewpoints>
        <viewpoint name='C vs P - Price'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[excel-direct.0vain4s1ooujsh1e53jbp1kaisdk].[none:Year:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='C vs P - number of oil wells'>
      <viewpoints>
        <viewpoint name='Consumption'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1c7toe21pj7do311gy6b50198bjl].[none:State:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Number of Barrels produced'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.16rykse1y4qm6s18gi5ij18mzb83].[avg:oil_wells_dayson:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Saudi Production'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Imports From OPEC'>
      <viewpoints>
        <viewpoint name='Saudi Production'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.0f87t1v0aij2oo12hhu1c1dudzkr].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='import_opec'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.0vusrnn1ulm5371h376yf1gao78y].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
    <window class='worksheet' name='Price trend line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[sum:End User Gas Prices:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[none:Date:nk]</field>
            <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[none:Date:ok]</field>
            <field>[excel-direct.0dwdace0y2ldw017fxiz502st6uf (copy)].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='db Price trend line'>
      <viewpoints>
        <viewpoint name='Price trend line'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Main Story' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Barrels produced' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gas Price vs crude oil price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='db Gas Price vs crude oil price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='import_opec' width='192'>
      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
      Pxhy168Og9nmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='production Vs consumption' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Db Production Vs Consumption' width='192'>
      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
      rr8VhaS44frvAgDOOvdtuOidr8d1N9+Aq2/YiOu+dw2OWLOo1I+LPn85XnfaYbjxlvvw9BN+
      F1de8c/4+mUX4zNXfBfnnn4kPv+Jv0P6tBfiW1/+/MAzbPj59UgOOg3XXvsdvOHc1y8sgN9k
      IlEdi/bfH0sbEZ5+5HHIux00WxN4/Wv/ELfd+SCOO+ZwdNsdAEAS6c28MzMNTB6EVeo/EB/w
      LIzH2p/h8KOeia/9y9/jwve+C8mqw/Gdr1yMd3/wk1i37gR3P6aAQgCnnnoCrrj869hvvzX4
      5Iffg2tv/PlA36hZII/efzsueNdfYGLNcZgYn8C1/34Zbrv3IQDAMc86Hl/63Edx0Wf/FSes
      O9Y+Vamdn/74Vpxw4vHgvS6Ea5tBiDoWJdvwngs/gA1bZkrX/MtnPorLrv0Zjjz8KYiSGABw
      /PHr8NEL/xr/euWP8aLffynuvP5r+MDHtWvF6lX74R8+9n588/s/wapDjsDdN34NH/zghfjR
      +gcBtUC/0XT7HXe475seul/95JbbVCGk2rLpV+rOXz6o7rvvPvXgfXeqmS5XSil13913qV07
      t6t3nvdyde1tG0pt2eu5kOrRDferW39xr5JKqTvv+IXiSql7br9Dtbuz6kc//KHaNdtVeWda
      /eSnN6t77v6FmpqeUnfe96Ca2bFFPbhxi9qy8UG17fH71YmnvFT96Cc3q4wLpSRXP//pj9SW
      nTPqjjtuV0op9eAvf6Huuv8hpZRyx+74Rf+Z5nZvUzf9/Hb1wP33qS2bN6qNW3ao3dseUxse
      26a6s7vUj396i/rZ+v7573zDmeqLV16nHtm8Q6m8rW6/5z/0D1KoX9x6s3po01allFJbH92g
      blu/Xt1+z3+oojenfvKTm9S999yldrdztWvrJvXDH/1EtTOuFizBT0La/MCd+OH9O/DyF59a
      5c/266NiBv/61Rvwmj/89cc4DKPvXfVlPOPkl2HVRPxraW9hASzQvCaHAs3OzoJWePj9ppGU
      EkopDFu3SikQMprv7c05/5Vkx1lK6T6LokCcxLCPRU101f8P2THam3aklGCMDR3X/ymy70pK
      CUoppFJQSgLQ40PNszHP29POD/9ZKKUghEAI4Y4RQvoLgFKKZrP53/BI/3lSSqHb7aIoCggh
      Si/MTib74CSYQHt6sYQQdy2ltDR5/Gttm1Xnhu3Z8+x3KaV+aZSi1WphZkYrd1megwDozHRB
      jHJJCEESxYhZ5Prgf/pt22e3z2z7szcLwLaR5zlqtVqprVE06pl9shO3qt9hG1Xvy57LOQdj
      DEJJFJxDKomExYgjPT5xHKNer4NzjiiKwDl3/wCgVquh3W6XFkAcx08sO4BSCr1eD0mSQCnl
      HqZqIKsG0z8mpAQB3MvZ110hnGzhJPXvG7YtpcTMzIz7PTXPk/MClFAoE9Gb80K/XLMIwvtU
      te0/Z9WiDvvsXxs+k08hY/Hv7/cjZBZV4+F/D58nPM/ulnEcI8sysIj1ubv32N1uF0opMMbA
      OUeapqCUIo5jcM6R57mTHmy/GGNPrAVAKUWtVkMURRBCOI4KYI/cONwShRRglEEqCQL9eyE4
      CABGmbtfFY3iYP7LrJqYhBDkvAAAMELd1pzzAjRiEAUHiyPXXyEEItOfcNL5/QkXctiPcGIO
      EyPD4+GCGUbD7jFq7CilpXc47DwAbrePWARG9Xep+iKk/b3T6bgdbWxsDEIItzhCyUBK+cSz
      AzQaDVBK3T9/MKvIX/VA/yUKKdDLe+hkPUhzfc4LwIgoVZyxakJVcVFLVRPV/suKHJ28Z2Ra
      T5Qh0OGItv9KQgaiju2f/WeffRi3DfsWLpTwHH8sqzh6eH7VrhCOT3hOKBa55/WeMRzPsI8h
      o2o0Gm4h2IUVRRGiKKpcxEVRPPEWAAAIIZDn+V6JLsO4JhcC0g6KOUYJQV4UA9dVTeTwuz+5
      q/rlXxMboxUl1ClxSRSDUYoo0lu2VYKFlOCCl/pU9Tz+Sx82ucPnGbZA7b3s9xB4CJ+TUop6
      vT4wyfxzqu43bHKH41p1bXhMKYWiKDA2Nubu2ev1nH4QPqPr+0CrTwBK0xT1ug6GDrc0e8xS
      yC0tNWsN97cVSSIaAaT8wvdGL9iTTD7AfRSQRolW6mRfj6klKepJijhJwAsOJSQiFiGNk4HJ
      N4zbDhN9qna0Ud/t2Pmffvthe3YR+PcK9R7/mL9gh+22o3bXsC2lFNrtNmZnZwd+z7Js6E72
      hNIBgD5kWKvVAOiHA+BEInuOpXASuAmiFKCU0QOUEz8iyqCgQDBcIayivZGT/d8Tw5X8id1f
      IEqjQQqQUpR+89GuKtFn2CSxaEzY51BvGrZ7+CJLOJnTNMXs7CziOB7J1ff2eBVV9bGKLOoD
      aMXYcn//Of22nhALoCg0GtLpdJDnOQghSNMUjUYDtVoNnHOHCGVZVlKu7HHLpfy/G2l5F0kC
      2bdq0lRRqHhWiT8hZx02wQC9OEQuUU9StLsdkJp+jnDC+wrkMFHP/23Y91HHfLHKb9+Oca1W
      c88nhCjtUFX9C7+H47infg5rc5jYmec5JiYmkOe52x1KinhlT37DyHKWoij6qIl5oKIoIKVE
      mqYlzsQYGylPWu43ijvtjW7hf99TW7ZfaZoO6BblF9g37ow1W5idnUVk9QZPLKmaAP5zhn0b
      ds4w+drfSS0lSYJms4l6vY6xsTFIKdHr9UrX2XsxxvbZuDpMvwqfZ2+p1+tBKeX67bdBCHli
      LABAT4ZGowEATrvnnGNubg69Xg/dblcrj4aTWm5kF0I4YfdGZNmXrTuUjYcpqYwxt6OpIIOn
      5XCMUjSSmrsuimPMzM6WjDihHuD3a0/93tPkD9vy/+V5jna7jW63i3a7Dc75gN5hP/0FZ/Wq
      UWR36ap+VS3G8Nph76UwwEaapo6RuPuNbPU3jCzXEUKUZD0hBHq9HjjnKIrCTXxLcRwjiqKS
      0uVPhlGLQEiJzLQZcm2fhg3+qHN6eQYhxXA9BZrTp2kCGvcXjv1XhdhUUYh8jCK7UIcp2uH9
      RqE0fpthW+FuFCrzIYULcm/Itll4yJ5V1O3vT6gFAABRFDm501I4KEopx5n8lxlF0cAEqxpM
      ISWE4Ti9IkMhCnSyrmt72L1H9clSURROMSMgKASHVAoZL9DJe+jmGXJeIEkS1yYBQUy16FQF
      //rK7DCZ259cft/CxTTsnGG/DXvuYdePGpuq+4w6f28oBBAsaGLpCaEE+2RfVq1WQ57nAPQO
      MEoskVK6rY8xNoAShahGVmQACGoGfowoQxLF7pxh9/KtsSFKY8/xuV4cRegVOaCUg0MBbRMY
      cNpiERhjyPPcydZVoswwy2qVP47fftWEHibOVV1fJfKFv9nvoX/QnnYwv82q91XVH/97lmUO
      KPHHn1L6xFsAADA2ptP2xXGMbrdb+dILwUEJRWQsg1bx7HQ6I9vuFRmEeUGE6EXApRiqzI2S
      v32F0D/XKo0Ri9BikXN3sPchpI+o+IsotJKGNGwy7e0EC9vZE43aSasYgN8+UH6OfeHwe/s8
      /gK2EsFAH/b6rr+BlCQJarVaydJniYAg53lp0kVRhGazOSAG+SRln5MKKcEoQxolpXOGcRtf
      NKnawodxVMYYakmKNEoQM+ac4EIkxiqJIecfhpyMmiR7muRVot6wNqru5R+vkvGrnmFYf0fp
      G3ur11Q9h5TyibkD+JSmKQghDiq0ooOQAkJKsxMQINccx/qGWK9BX3xSSiGNEycCCSkQscFE
      46Nk21EUx7FTyqrOtfei5qX67t52Bwh3lardIBQBRvVt2DOMUkj35bxR9xvGhEIKd5phYtye
      7lmlYzyhdwBLFuNNkkSLD7Jv7LJKJgAXQ2D9Vqx9wZ9MjFJQQp2feSi3288qmXeYHGzJTuiQ
      c1ZxzyrRiTHmPBv3Vj4HytZjv6/DuPCwNsOxGDX5wx1mmLweKudV9w2Ph5Bq1S48rK/hOU+K
      BQCghAwp1XeVVZ6CWRQFOp2Osw2kaer8xhljDjqtJSm4EMgKrWQP2+Z92hOqAWgzve8u4E/i
      KojW/9vev16vlxZS1T3D66oWk6VwAo7i+FXPP+z8YQvbb2tf5H6llLP9VO0GQLUvWBX5uomL
      CW6327/xEWF7IssZbKSVXQiUlNc5YwxxHKNWqzmZ2gZNZFkGKSWkklBKe26GHJcQgqzIkcZ9
      qNKncML5kzGO4xIu7V8fIib+9f7xbreLer0+1L/HikvD4iNCskiJZSLDnqdq4g47XjUu4TNW
      /VZFfttZliGO44FnC8drVP9K1z2ZFoAlpRTm5ua0IuvBiVXUaDQc5p7nuYNWh7VrRSwuBRI2
      6Py1L3ItMFwmHtWOtQWkaTq0Xb/tYW2FE2tYe/vCqUdR1STc08T1vxNC0Ov1Kvu5N/esOvaE
      V4KriBCCZrOJubm5geP+BJFSotvtOpFox44dJYcu/zr/ZXApAAVY79FhfbC0N6JTlWgyauLZ
      nc73edoTjdIbrIFumNji33dP7fvn7Wl3qNpdRj27b0i07QzbmfaGnpQLANBy3tjYGHq9nnux
      MzMzpcHyxR9CCKanp7Fo0SK0Wq2SqwUXHFxIEGJfcvhyFJQCCLHu1J5hyoZc2hUD1Q/pM3J/
      URRgUaRbJQSCcyRJ4qzRSilQu3jdS9b3hLlPFVpV6uEe5PdRE29vJmZ4nz0tHPvcceAWHpIw
      vlHh4lWq7Mrt921PffUZ4ZN2AQD6Qa3vR+gK63+3MvWqVavw6KOPYtmyZcjzvO/opSjYyEEl
      JpaYImZaZ9ARZxKEaFTJKuW1OHXwLGEmrFNwJHGsDWGEQAqAMApinOWIuwcxS6h/T0uUMmf0
      s88+akLbc8K/baz0f2asQ5uFf79h+s6edh0uOBhlA/3iUhsPdZ/1IvHb8X8f1ecn9QLwqdVq
      IcsydLvdUlyA5SSEEGzevBmHHnoouOHA1m+Ecw5hFGNLwwZWRDEYoSiEvkZBuQUQMT3c3axn
      lGztDmHdvO1Ly3kBUjAXClmSWY3FOJzcnBDUk0EfqVE6wTBlV6hBvcmfZHsrFlXJ96XFJoRO
      bmCACr9f3LqGKAVF9d+SKhdCqpREtygQRzEIAO4hQHp3FeBy0NUiXJhPGhh0T0QIQa1Wc64Q
      tVoNSZI4SFEI4Qxp1mUZ0INkOTslw33wCQigAIp+UD0hMBkntKjTMHlraGny9fk7I9RN7qqc
      hkrpzBVVeoeQciA/kP/sYX/9SVu1IPzzpJSlPusdjrv2fNEjvGeVG3POC+S8v7j99WPvQQkF
      hfaBIkR/ctH3nGWUgVGKnOeVsj8LuH/4PLbf82YHAPTDL126FFu2bEGe56jX61iyZAmklIjj
      2NkBGGMuvYYmgoxnlXCq3UkoJVCq73Smnee0fGshyZhF4CicYY5RCkqJvQXqSQ1ZkYMXHFCD
      irD/vRan6BVZ6bdekaOelBGSULkMj+u+V8OlVRPcineEVMv7w3YdS1IpRIyBUeai+ygG0SsW
      tgOA0bJYxyhzu6oVweyzWBjbioVhsjNL82oBAECn18XixYvBGEOWZXj88cfdi56YmECSJCV8
      Xbst6GutCGRfcsQiRCxCXuSQUjlFNJS/7adVrNMoRq/QvycsRkYzRJQhiiM0Wy1s3rJ5oN+W
      60mzm4SKoVIKCgqdvOeCaexv4ST0++eHPA7D1sO2/HsD5Xjj0DExXBA0ABFskJD9pJSWHNek
      AQDsLlC1g1XdS0jp9DF/jPzdkQsxvxYAIURPVsKQiwKMRVi0ZLHbZqEU2p0OKCElt2nL+UM5
      NsszjDVbADQ27ytdVZzbok2EENRMNjhCCCLKXN7LuU574DoCE/RPCCjR/SIJRSOtuzgF/+X3
      ihy1eNCBb5Tsbq8ftev47VTBjkopEEpcorFwLKq8duv1uotzkEqim/VQr9UhuQ56ohV92FPf
      CNFpJUORzu0Oss9E5tUCAIA0ScHzAlwIFJ5ZHTADCJ0yxTrZ2eBvi0T4ShUhBJ1uB7W0BmLc
      rUttDXlx+j6DPvhCCHR6XVDGwE2SLsCYHAgBl0JzNejJ1Gw00Mm6pckfKrF+f6v65Mcw+HHG
      4WIP2wq/cymwaHIReFGg29WLMgxgr2IO3W4XWZb1mZNS6MouWibueGZmZqjFe6CfpPy3v8NJ
      pYAKHWneKMGWxlpjkFBIo7gEG1pS5p+1CNtdIGZlXhExhumdu3Hbz27FvXffgzSOSzDdKPgt
      JCtXt7sd9yJ5wUvQnu0moxS1OEGzrjPkEQzH3v32q777tC/B665PUBodihharRaE4KCeGFil
      D5SQKynQyXVshAYfIr0bkn4CAauXiSBMUyqFvCiwecsW5HkGOvUwOu0OZmZnsXPXLnSM06Bd
      1MzLJDivdQBGKVrNFtrtNhgBOMqQnxU1gD5URwgxXAqaywB4bNOj+NY3v+Wue+ihh3DmmWei
      4ByxF39cRSF3rTovraUo8kLbA0ocXl/X7nRAKHFpE217o7g9oAOF/Oi28P7hhM14ASkFAB1S
      GrMIkijU0xSEUhRFgXqtjrlOG0pKxEniTH7hZPP7qP/Q4EHOi36qeKUThM3NzaHZbCJNU50S
      hvQzfVgURxKCZqOOxdefj8791+EL5DyceuqpWL3//hrFM16/4U7k92He7QAAUK/VoJQsZWWz
      g5JGScl9OIoiPLZ5M7IsR6+bYee2HaCguOfue0ptbtiwAVNT09j06KOYmprG9PQMtm3fgRkv
      U5l/L6vMWpLKBt/EDnL0U8BLJbWV2SriAJSQA1w2lL39fxadcmKB1KnGh5FSChGlSEyfGKFg
      EUO9Vken00Wv24MoOKZnpqGExvKlkBq79/rkQ6FVO24hOITJgVpPUqfzWGV4YmIC4+PjDrq2
      nD2OIkzmW5Dc/w1QKLTUDO64+UaMj41hrNXqo0Wsb50P7z/vdgBAT4w0SUGLAiKXLj1JzKKS
      WGRfXKPegFACcRQjSVNQQgai0AghiCKGxCifhBK0ms1S6hPf5TkvCudNCsBxZQAojHEIAJTs
      T2irAwDaQlrF1exL9mMiHLej1camKg5pyeLp9lMIgSIvXH5TjdJ4CFCAtIQQbFnUsi4kVtfx
      3EcUcbqBze3j92/b9h0AgNWtCSjCMK7m8Be4GKJ2CHbIN6LX66FuvH0JIaVd3d1dzSNDWEi1
      Wg2EEDTSGhppHfU4ddyRMaZ9cQzGv3TJYoyPjSFKIoyNj4ErgXXr1pW8Ep/znOeAMoZVK1dg
      fHwM42NjaDTqaHhpOPzBt5O/SkyJGQMBEKeJTo0o+hyUC67dKIjOjhx7OLjP/XPBB3YZ/34W
      KUmiuJ9sSxbgWad0TbggIFVJN/F3mKoY4GE6BwCwIO8pc9eXc5JWGdPSNAFjFLNkAr1TPwDZ
      XA6x9DDMnnoROp0OelmGqelpFJ7BroqelO7Qe0NCCExPTwMovyQLR8KbTNy4NTgrLTRnZNDu
      E+Pj45icnHRtDENQqohSitm5WdBIK3tJlDh3a4fOEAIlFUC9iYm+Yp4LDmYmjVB9ZZESrTCX
      FE/BUQiBnTt2YunSJdi9ewrNRgOLaAdjV5yJz7ZPx/EvOhtPPfBAdDodl32j2fLjN5QAACAA
      SURBVGhUKrWWwgk2CgSw/cvzHJQxZFwDDrU4cY6Cw8j2od3pGCOYcnmfACAvCkghUBQctXrN
      KdQ+IuQzinkpAgF9RzkL2VnKi9xZFy1xE19sr7MTM04SrFmzpnTcUlbkJbFmT30hhGgHOild
      zQDfGEQAbR2GESmg/V+kySRhratKKXSLDAR957R+gL9e3FJJNOp1bNu6HbWaFunw+HqgvR09
      JHjggQcwuXgxIsbQbreRZRkajcYeK06Ogn4tDYIDZUNV1eSvardpsgSG7cZRBE6Ii/EoteMl
      Pbbva94uAEqpCyzxJ68PZcohL9TCavZ7+OIK3s9h6r9w31RvFTlAG9p0RgitCMfm3r285zQI
      yiiybg/1Rh3ciGa2D5bL22exNgsrp3MpUAgOC3gRENSbdaT1Ghil6HS6EGufh/vXnINoZjWO
      OeYYtFpNrdRKiXqtn6bRf+aqcfE/w2v8T+sOYpuxWD1D9e4Rolvh/aWSoNDlpcKcQ0IKMMJK
      E9/1a76KQADQ7nSQm6RJYeZlpbRbQcwiSCVLOwCAknjhv4xekSFmsXMXKGHXnkHHLTjDZcMC
      E1LplIy+ByolBJ12B0mSgDKNzmQmhQojFKnXHy51THM9SUFM3bEs1/5MSRQjN+WgrKhFCUU9
      0fHRBdf+Sowy9Iqs5Frh0yj4NDwecnELLYMSp4xHlOlkBBVGQv+7UsqFtHY6HWRFrlEqw7wU
      gL7XaL8UkwIG3Kbn7Q4A9AfJGlvCl5jGCQgAwcuZ5yJP+Qw5XL1isoSWU/+l+Nf697DVY2RJ
      /1SoNxug0FUT4b1kSfoxCBa2pJSiV+RIWATKGBZPLMLO6d2QSiFhEXpcV6esp3WH20spSyJg
      I6mZ9DCDsdGhIlwlqvi7YMgshBQwwl2/PaURtCryx8nWiYi8mG3Xn4rx12Natpj3inz+okCA
      yR0UxAyXuANlyHjhxBClFBKmkRN/Ivhc2h6r4ohVUKM11Lg+een7QjuFPTfPc50CxrYPAmoS
      gXGpSz/lBkOnRHPYXp45O0AhCigos5Bjxwiq8HpCyk5oVeQ/7yjRqMoG4M4BSojU3gAIziAW
      jHdoC7GfpXPMf/N6BxBcL4As14mw0iQpyeh+vk5LkbFGVsn9caD0hsUlgL5PfyG0q0ONpKUd
      yJ8A4VTy8XwhJYi9Dtoz1SJAKC1KHY/ACHWlgrRSrcuvtrMuuOSoJ7XK5wrvPYyG/V6FDvnO
      aMwgOYxFJbcOO34alZNutZR2SfOuqBEZqyLZhukrAEEjqc3vHWB8fBxRFCFJUl2VxaRZdzAi
      pQhnofDhSeNfonOQDnJJv5qlq2pJNYITsQhkCJ5uJ0koZtg2bRSVrW1GCOlDiZHWA+xkspFo
      NRMnEFHmdjZCtCeqlIPFMIahMqP+rpLVLfnWdV+PiqNIM46KheKfp5GvfjALAJfy3p7jX+sQ
      NPO778gIwI3PvN4BHGriTa4oilyKEGv9VDCKF4scUuHvFEAZyszzvBQ+6IsHhei7HiRRjJ7s
      IcuzEmwnlUImyukTS8ok+l6qoexdSAElOJIoQcaNi7bnnkwpBZEEykSQMWoKc5tb2fb0LqEQ
      BgEBg5bj8Jh/PES8LCpDQV3U3UD7XtyFVYiruLjVAYa148bLjk3B+8qxsULP6wXgUzhZ+xNc
      AqTvmUhJGaGwnN2GWhJKHUZtM0JYKjiHpAAUDBJTAIwgbdQx255DvVYHoxRZkVdWj7FojZAC
      UdhfA1lK6PDFnOculNN3EwY01GtjluMoRoxymhF9TnX5KJ+LVinBgA40sUo4CcarENwsPI3k
      JEmii4R7uoaDbZUWgaxSX0VJkiCO41KMd5VCLpXSyQeifhaKeb8D+KZ2n0NRSl2mtFpaQ3uu
      DUkJBDhAtKIam7q+gB5Mm6mtjEaQUlaDXBQgIEhNZjMhBaRRRlWs0O110Wg0oCCdRFBqz4pI
      ZmIVmQ4ptDlRbaA9CEESJVpMEhrS9EsuUUJMXIFy3q5CaSe22HOWG0V+n0rwrZTIuF7ArbQx
      gAAxQhHHEbp5D0QZFM6IkX1xxli+ic7WzQVHbIOWvPdlLcDWnhP2LRTBQiszIfMsJjikfjxv
      uTqkFUfm2nMQUiKppRCCg1CKhEVacQtk85Dj+JwZ6Bt+bEBLLgqH23MPidLB5oPtOhRISSgp
      kfcyxEmMPMsRMVbylycgxqlP7ybSiDuFWYw5LxxcqlEuD/nyJppP4cSxYk042fSuBzBSTtES
      UhIl4EZ0sRPTumpbJgFoRbmddUvhjX64qoVBh3F+HwINSap57AwH6MHJeVGagAr9jAf1Wt34
      o3MXhVUIMaCwhW2W4TaNEBWcO9ldJ9oS6OYZpDI5gqDxb3tpFXoC6EWb1mpIaqk2+DCq+4TB
      l2xtGalRjLkUyHjed5JTGIBwrfNYOGn9Y+HvlsMLKdErcr2czM9+GKI91+5CMGPq75y2P5Hx
      zAWAllfU3B8by6h8/WlPO5dPUsp5vgCgU3Rk3Ku7hb5FEUZhU/BRmtGDbH/LihyF4Mh5jkLq
      LApaJu4n3JVKopP1tPNbwRHFsZucVS/cIUSqnwKlWW+gyHJtqSY6nsF6WPYXUQWkCoJC8oFn
      KQTXi8RDhQrBtXI9BB51Ow/RDnhQcH5N4S7gf/r/AJ2V2+6Y/qKpuq9SClmWodPpDOzg/vlW
      D6kSiyLG5rcIlOXa39ymEgm3dSm0E5yFFa2LAzDoA+SgS2gLIwBQ5b0YaChOyvL1VueQXE8Y
      gsBAFLy8UAnlQiBNU2RFhlpaK7lg2HMyXiBSWjkWxt0bSvVRLlWGQZXSjMFCpybMfUDet59+
      7WJbV8GHccMFHf4dUghE2GN+W/ZvPy3+qNphw1K/zOsFALMVU2IyxZFgq3eGeu2jHgfypm6i
      PzEKwcGl0IpeFJsJH05e6hZRZnB8Rig46UOxVnlGxeQv4+h6QjdrdWRZptOmWEXS3IMb/FsI
      CZhdKOv1EEexjntWcMct6Uk9qFzmMnfoEYEWUyghg8q/9yzDuLfukxhIdGuvr4I+/T5meY5G
      vY4kSdBut/U9iYZ3h+2eVeM4rxeA9cL0cWqhJKiyXI24+FY/osgaZEIHuiSKESkToAKNbhTW
      A9MTjepJ6nIKKSi059qIEp3iz+az0aLOoB3Bf3mMMW134AUYo5ibm0NSS7QSadK6FLwwy1gh
      ohEogKhWh9QPNTAmbmJEbMD/BwDACWBsGRLKKfL+OIQTMCty565NiI4BTqLYRXxZ8iepj0SF
      z62Uws5du6AmF2FqehqNRgNCCOzevRucc6xYvrxfiraifb9v81oHAOD84y1FtOzq4JRPKV0N
      316u03c4qzD6XIaZoPqM51ohDLiYVXotp86zHFGauFKs1Ex8eFwwlJ8BAx1C7xZ5USCKYzRb
      TWQ9XXybCx0n0Ko30Uj1gut1uyg4H6iVGxr19Pf+7/7xmEVuBwOAHs8H3MZD8dAaEq3eYwN+
      +vcalM+rKkjadjnnqKc1bNu+HYwx3Hnj1dj4yCOI4wRjrTF0vBiPEB4NdZB5vQPkRe4U4DTq
      RxVZGdZfGJbrW5N6YfB1jWhQZ/hhJq1HRJmDPgETz0uZyT8qS8qZLeeqFxAz8b50QHX1X6BN
      ohuz2CjbBerW6isUMpmh43mMEhhjXhSh1+0hNuGck+MTiBjD9l07S6IV8yzNQDmeOY106Vib
      zSHnhdOjfPnfnl/3bBBawdZgg42yo0RnwrZGw5BphDuAEAKLFy/CypUrcNttt+Hndz+AdOMU
      /uiP/ggASg6OYf8HxnFfJ82TiXq55oSaqzEdgG7EAr0zhJyJuIxrDo1R2lospIQQ0lg1qfO2
      1HEEeqEUUiBCXEqhmOc5JhuTfQXOiF3w3QG8ialQDlS32HnOcz0RG3UTEF4HSXUqdms95kLo
      QJkkdjDl7NwsJicmy6IWiNNlgD6SYsfC7nT+OISTtGoXBaBLzkYwBrq+P1MaJQO5P237PhFC
      MD0zg9m5OdTrdaxevT8OOvxYrFmzBnNzbczMziJJYixetGjgfS+IQAENBLl42y6lgxyYEKBj
      gmgYpdi6eQu+ffU3sf7nt6Fu6vz6hSpsSnULo2q/nDKm32q1sHv3bq8PGp/379xtdyG4QLfd
      xQO/vB/Xfe/7yLMcUkhwroPf60nN2TB0bQHiguYjZsQrOjgBuBDYsWtnYLvQHaiCF50IYbxJ
      +4vGjlFZGbbXKaVQ8MJkhi6QsLLnbGF8n0KEyO+XPd7LMjDGsGv3buzavRvHHnccli5bhizP
      0Mt62LlzF4ToQ7D+4gz7OK93AEuhfw+AyvTfUHrS5nmOKIpwzTXXoNvtYtOmTVi1ahXGxif0
      C6RAWtcT0nJtAC7QJEQmrCHHikNxFJWc5qQUkFz7HN18883IsgwHHHAA9j/gAD2xIi02RSxC
      wTlqcRqkYNf3qsU6fWObCx0IU6ujl/XcOf5E4ZKDKTbQjt93G10GuA1lABr2dwOb+0czgXLM
      rpSDPv2y1A6cU9/aNWuglMKSxYu1iwnnTgRbvGiRyylUtXv4z0jpPMwN6pPO6a8G8v5LKcvW
      YQ9LLkz4pIJOrWKD6m0u0bSWlBVI6BQokeeHUoIyvdjh8lV9ajabWm4mwMknn4zHHnsMTz3w
      qVBEozt2AdvU4/Zv65RmJ6GUGgplRPe/Xqshy7OSfA/AtZXzHLW4uiCdUjo9CtsLIUIb7gZd
      u0tkDmVFDgmFmEbaWdCjepwOTmITmuqPbRRFJcW+Cply7Shz5XyLCRZCYNuO7S4bmT8oQgr0
      irz6RRmEBgCKXo577r4bK1aswMEHHwwuuMP2bUENLaNHDqMPER1CdImmWq3mfrf5Mvu39EUP
      bZOwyjhg4Nw4QVbkDqWpUvgKzpGLAlQCNGaVi9yOQWRKLoVBJpZzhrtLVdijdauwlXL8Npq1
      uk7vyPQCsu4aWZH1OX//BuacuGS8C1EyO9nHxsbQbvezbPvjECrY83YH4JyX0paUB3GEu4N3
      XrPZwIknnuh+YpShHlP3AiPGSgpvKFP7XNdlkgBBzfjyV3kcKQDKOLJZlEp7UoqSgj5wnerD
      vVwKJKgI4CHE2CDogDu0vwtWjVl5iPoxBWFUnbV0E4v5GIZSiL6vPgCXMt5PSjzMZmD/tv84
      59pGEhTVDttQah67Q9vqJECFoQWDkVD+75rjxkMnNPEmi03uasMRQ0zbij5+IDpjDAkSF+Vl
      yZZGijwsXiltaMqlQKvWKMngft+AvuOb7kf/uewxqRRywZFGg/WPAa2r2KzZw+T80s4QXB+x
      CLGBhwkhfVsHdDY8YVyWa8ZA6N+jykU75P62D3meo1arleDQMMW6e5cDTzkPyE5IS6VJCR1Q
      HiISIQZf5afSR0QUFNEhe5RVp+UO2wzvFzGGWqR1B72zpC6VoT/5e0XuosOqnM/Kz6cd1Rpe
      CpZw0jqRpYIBRMbPhxIg3nAdHn300QHxI7y3PzbURHe51CRK90kr2nB+V9aeYl2zQxl+FNnF
      Yit/htb6sK/zcgewW2MVxGbrXwFlrs4IdUHnvitEyAmtYqbb4pjZPauxb1TLz5aq+kIpRRwo
      p+G1qamEYp3QfAq5MgWBIEC310OS9lEYm1OHV3h8cs4xO9eGMKjUsqVL0fzO2yHv+xa+jj/F
      8ccfj9/6rWciyzOkSYJut4eJiXEAQBzFjlkUgg/AsDpSTX8RSpTsDf642OAhIWQJZh62KOzx
      LMtQr2s/qSzPXNyBv2jn7QIYRoxQWOzBn3CU6gVAjLxaCG6MN4MJYS1JUe0R6U9wYLi7r39u
      Vfv2mJASEe2/Shudluc5bDpAfYHP/foL1nq5SqWry2gDn860FkURpqen0Wo1EccxZmZnMbHh
      OkgIrMRWPPzww3jGkUeCc47t23dg8aJFLq07AaDMpPZDEW3fhVcLTO8sBFIq5KIco+DGh2gP
      3dIYB2Gn4Tj5SQ6itOzbRMg8dYXoZdqnR0gJSvv4OND30LTKmqVC6kUTG6zdDyIHPDnb28YB
      rRhXcf0qGdoer9ryh8mwAAa4olIK7W4HUDq+NmFapo8oQ0G4ez4AJTeMWpy4xW1dumtRgtWr
      9wMMvDg7Nwd+0AuR3PtVvBmXY+NTL0Cj2YRSCo16A5u3bsHExPiAWFVFaZKCeTYPe38//LFq
      3ISSrhytra0cUtV76XQ6OvGX57I9L2HQdqeDXdO7oZQyJYdSj5saRzJCwaUNHI8G6olZqsVJ
      qYiehRrrcVri8CF0Z4lS6mBQS8MWgL1HKGMTQsAihl6WOeus1Q8iptOgWLEtFxyCc6RpDdwg
      L2E2OxvMY+9Ti/r1lAHtRJps+AFAGfK1p5ZsGHYMQOBsH2H5JbuYsyxDHMeey7YowdJVC15I
      iZznAAhqppiGzzT83baKmdgsEvacebkDJLGu5i6gLZPdPHOWRG3d1Bw7F3rwJscnsWP3Tpe5
      wObOJESXEKrFiXHu0g5ilqMC/RdXVeitiqrwbaBc3KKKBNec0BbSJoQ4NwjAGPekMMY/IDS2
      +YsyjbVLBzcT0uYv6qNkBL21p+nrhABlDNJ4n0opIZSW1zkRSE2UW2yQJSt+2glo9ZxCcMRB
      9oeQYWj9Si9YpRQ6WbeUE9W2a8lfCG6cTD9de3t8I09Csoqs/12qcgVxn4MoKTHWaDlPTRW0
      1c0zY/RByTXatR9M3FDs8dsaRX1FXXt/FkaGtgWzFTT3tgYuLgV6ReZkfqXglGXnloFy0ipL
      1s3BlmwK++sUfkpRS8sW2jRKEFOdVLiT95BzDiFEqf5v+FwW3QpFw/C7vxhqUVIqlO2f66NP
      9ho/dYo9d17uABZmE57V1kd1tC+91Q0kOt2OlpWtrGny7wBw4gWgffQbxinNv5e/AEI8OxST
      wu8++WKA5ubap8a+0IIXSCMtUgglkUYxOnmv77UK5RzkrI9S6snbVSjS3vxtRQqfY8dRBHCj
      OwWTPhTh/OPhRK9iJCGoUDV2VecwNmjVnpcLgDGGJI7R62mXg0wEuDfRaT0swpPn/WSy5mdI
      k54wSrS4kWUZJBNu8AtUZysLX5aVhYEybDlM1LHXcVFoHN2I371ez0G4hOis0oVUkFygUIV2
      RJMSrKbvl6QpGnHqLNtVVBUPYPvph0EypuMc7Hja4xFjiCLmXJ7Dtu25FjWqchXxqWoHAgZD
      L0ctiDCSb14uAEIIxlpjOlObP3BWfEEfHcmKAq16HQXnGqsmFBIKSWxSdjSaOqOzVGjUdfGK
      QmglkJh7WTuATzY3Ty1OUffqiAEwyaXMpDFwlEVpLDUBl8KxZ/LjpzQd8N1JU62MZyZ4JU1T
      Vx/NnxhC6MRdNkQUKE+sELL1J6MQwiXY8sfYJqPyn79yYRO4ReCLOKH8XvV3N+85X6iwf2Hq
      yCr9al4uAEs5LwYGFNCDmMaJy0rWyYwM6VVetNTpdsC5ADE6BMynDRJpJDWX8tyfdDkvdAww
      FQOTopvrsEYbWAMAtTgdSF+ulCmlCmKiqvocrp8UVotL3Cjuc+22Q7982Z9SioTELgZ6X8Qi
      +3yh2DHM6BeONQFxgUhuQSoJwXWVm1EFyH1fIZrPosMJao1WaZKHYpSfV3XeLoA4jhGzqJRh
      WSnlLJc22wGAUsRTSFqxC6y3LDL5hKrlWy51ci2LjIRtW2WwnqQuaIdWnGe/+7Jts9lEkiTY
      tWuXxshZhG7WA5zS3+eK4eS0iWhDGX0YihWOhwYShEOhqs7zOXSVnO84s8li7V9TdU9KtKvJ
      7Owsrr/077CVj+GMs87BihUrKs/33xMwTwtlW2JRNJD9WCidN0cbhPTi8LdlnxIWGwtsH0Gy
      sq9GUJJqxEdZh7b+Cy5t/SAOeWGUutrFoQhQxV3tsVarhbFWS9sXLPIJwJrAqpRPq2BnxggW
      5vbx++nrBhZJy3juDGlVC7uKfC49rE+AFpF27NhRunZmZsbpHVNTU3i4WIKeirF79+7S70op
      l0Ha78+8zwwnpax0ie4VmQlnVCUjFyF6JtnsZ7bIhc0sMUxJ853UAG259a2doQ+MLhwxmMh1
      mDgR4txKKaRpijRJNT7vLXKbBKBqghKiA+dTaxOh5TpnIapiM2Xo1I6kX6rVq7yj4doyIwn7
      PkrxBXTgEaUUU1NTpevm5uZcVu41a9bgpJNOwroTno1DDjkEhOgqoHEcoygKbNy4cWC85rUI
      BACQSiu0LEIu+gYawPjYo5wZgpoJElHmAmZc8LsarCbjKpgEUOeA6BAksyKEICJlZVZIUVkB
      xbZrr+v1emCMoVar6cmcpuj0ujoZrimHlOd5Pw+SFADKQe5RxFDkRalPlsqKMwdj1KV60c5m
      +jwrlsXeGIQ7abiohi2ALMucG/Ywi/jWrVuxbNkydDodzMzMYNGiRc7Cvn37dszMzGB6ehqT
      k5PYunWrzqGUJPN7AaRJgrwokIm8tMUncYwkTtDudjQnlsoFt1NCXaieTeudxglypV/QsJc4
      Slzx3ZmrdhGNLImSyOSfE4oneZ67EM04jtFsNDA7N+dEKRYxTM/ODPSJEgLKmLaWop+5LXwm
      /zqppMvx4+f17HCTVtJkqs4B446hXOB/zgtkpqZxFAS++M9SVYTc74eUEo888giOPvpoJEmC
      22+/HYsWLXJRYStXrkSWZViyZAkef/xxKKVwyCGHYHp6ev4ugF7WM1nTBpVBxiJ0uh1MjI0j
      YhGmZ6dBpCld6gWp+Em0hlEoalTBiEC1QcxSzgsQUt5BQrjQv1ee55iZmcHY2BjyPEen09Uu
      EsYAVggOUBeT5XdWe7wyijROURS5XgDG8cxXiAkhaGddEEpAia1yr4GFXqEzUFOzYFkUuRQx
      Gc8hlEKaJDBpUkGJrmdQpYDvSeex1Gq1EMfaNbzZbJY8fh0iZrLH1Wo1PPLII/NbBOp0Ojq+
      1OTN8W0AkAq1JEWeZchUDwmLIYhAryhDllwKJHvh32Nla0qp28otVS0On6yolcax7meI3AS6
      hl1IWZ6BzJnwQCPLCykAo7NUoTBWfrHZ7fQCGZ7IVvvkGJjVyPy9IkccRejl/bSHOS8Qp9ov
      SSi9wxAbFEkAQvoBQ8NKLdlCGD7EWxQFGqYaT5VoWUWEECxfvtwVFZmXC0AI4WARalCW3BSN
      UzBmc5ci3Z7HBriT/WtvBt8vf+qfG8bYhhnM+rJ7Oe6gatH4u0jOOSLm+dsH51pjn41Djhgz
      xbH7SXWFklDGuS8MRgdspXoKShmE7JlcRHQg3sLemxCiXbONYcxHt0ZldraiHGMMjz32GCYn
      J9HtdjE1NYU1JkVKSOEY93o9FEWBpUuXYsuWLVizZg127949PxfAgFXTgwarJrIwSWbtObZ6
      PJcCEKRSFAonaFj10Z4T7gA+5i5N2SLG9g6s80Ukf3IxxjBZm8DumWnneqzzkNJyMjCvvzGL
      ILlA4lmfw776NgooHQBv/Y788yIWlxZuCOn6SnLVzmTH7bDDDsP27duxY8cOxHGMI444wr3P
      lStXun6uWLFCP/PkpLb3xDGWL1+OTqeDpUuXIooibN68GWmazs8FQAhBo9HoB0gwhkJQh/gU
      onBuxBbiE54xjHuZDnJeQDHlxIdGowHOOYqibGVmbDAcL9w5wgWh8/hUyOrBs1QdsxZSIQSS
      JNEcHH17gOb2g9e6MkVD+qZ3JR2Ib8dLF+Ij5r4xuBBI4ljXXyakX5lR9S2xPpWU6iDUNHyu
      pUuXDiBKhJCSojwxMQEATjySUmLp0qXu/ImJCXfOvFwAAFwAisWRbdVGy9lsZBIUjKJHoUHT
      wZ2iEBwQuraYjTiyHpIw54eOXj6nH6YYE0JchobwnlVKsE9dUxm+kdZQFAXa3U5J1LAZqomb
      uHoq2M+q3az/Nwas3LEpdG0LAvoxE6OAgvD3qsVhM2rY80eFtO4t2XGbtwsA0IugKAqd6tBk
      VOsWmZsoimqZWEiJWpygm/V0jG0wERmlzj261+uVUh0CcGkLhyE/IYxpPy006C8e6yPk358Q
      YjJF9+9RC0SXrMhdBrzEFKa2UzIsMj0seEeZa2z8gT2fAIiiGJ1eF4qX6xvre+rvti5AuPsN
      4/b2eJqmLqRx69atKIoCrVYLq1atcucJIVx27xAUIIS4gnq2bde/gTvPM0q9YA6f7Euysjgh
      BJMTk2g1mu53J2NTBuFNYN/srtEX6Tiy3Q38NvxzgepszJYyI1r51ymlnNjik98mo7RUCipi
      EWIWldKsAP3FVgU/EiPO2EqO+tl1NRwly4Hsrg/oZ7P2re7+OPj9tLpSmK5RSolf/epXWLVq
      FQ4++GBQSrFhwwYopbBlyxbMzc2V7stlP8tEnucDlmD7b17vAEDgG1Kx7fsKXZHnA7I8YFMA
      6nhbKwr450QschklQhddLgS45M5vCBhuK9AHYZLuDu4C/qK0/3JeoC67kJvuRmfl0YjScuB5
      KEqFKFOI0CilLd9xGpmQSV3oT+8Ngz5TtqBf2OdhqFmVkgxog1gcx6ibnEarVq1yPj87duxA
      FEVoNrVr+ubNmyGEQL1ex/77749t27aVLMF2wcx7SzDQD5Oz3IxAG7yETSNoXCR87q29Pcv5
      Lq3Pvi9aWLJJZO2WvHXbNoy1xjQuT4CNDz+Cm677NlY+9en47d/5HczMzKJeryGJYxCXXaKP
      f0ulUPDcKd6hjmD/npqexuRYA63LX4oHplr4Xvp7OPvss6EIgCBEYZQhzrYpjSFLKl3w2sb6
      uonv3ZtRhjqfwdyOx9Fd+jRESYSYDma/8NuvehZ7rF6vY2xsDOvXr8fExAQmJyexePFiEEKw
      bNky1Ot11Ot13HfffTjooIPAGMMDDzyA2dnZSkvwoYceiqmpqYUF4BdpA2CKR+cOLolZ5BaB
      pTROSolwAS1KJXEMyQf9+y3ZSZSmKaamp5HnOVYsX4aHHnoIXZVgw4YNBvZk6PV6aHc6aI41
      wAgDQYRCcl0EjmlUiqHvZyOHiCBibhfunGrgbhyKLMswNTWF1tjY0PEYRoIf3AAAIABJREFU
      NvmdXkIjcMkdEmZ1CykEsl4PzVYTCsDY9AMY+/dX4d7sEPwwOQ0veelLsGLFCnDOXXHrqntV
      HbeLZfXq1Vi9ejVmZ2exa9cubN68GUcccYRjTJxzHHTQQdi1axe63S7a7bZzMQE0s5uamkKa
      pnj44YcXlGAAzkLrAiQYg85d73lnmphh6+BVBWfW0hRZlrlUIFUKnhUx6o060ppO/VEUHOvW
      rcOKFSswMTkBBYV6LYUQeqHkphSTzp4QOaWSEgKiRosS4+Pj6GUJtj/nAnQefBBHr1qFFStX
      gJAy8uQnA7BUpQRnJoDIAQFKAUTvmL1uF+MT45ibbSOJYzx+xw/Qy/bHFixHnue44/Y7cNJJ
      z0Wn20Ecx0jTFE0DUw7bDXyyrs3Lly/H2NgYJiYmcMcddwwECd17773Yb7/9sHLlykrjI2MM
      S5cudSjgvF8AgObeNs+/Uv16AW7wACDYkokqb9XtXlcbg7hAvVbTlRtpP1e/bVsamJWYiZPW
      UrAkwlHHHqMryCuJRlrroz6qX1COgPRz/Cida1PBoB0VEGluMkwfc9yxOOqYo41/Dh2IQ/Ch
      WJvWBdJalAsXHuoswoCrSwYzBkmaYnZmzvnjbFx0In7qMZHx8XGAAK1mE3lRIDHn+RSiYT6N
      jY1h06ZNaLfbqNfrmJubw+TkpLbkRxF27NiBsbExB5Hu3LkTMzMzWL5oDOMbvoVcPA1CCKxa
      tQqPPPIIVq5ciampqfmZGKuK2u22C67wKZRZS0qzlA42dTg2IZBcgMZaGbYFJnwDkFI6eIQb
      D0+b69+2UYtTZ4gbhp8LKXVqQWLTsEclZTUrcp1BjVAA/WorNse+/3y+0pnxol9wgwtIohVZ
      Pzd/IbjRQwoHg/rVXKwf0c9uvgWbNm3C/vvvj+eceKLbYS1VLYDQFyjLMjQajX7thE7H5fxM
      035Gv7m5OWf4st+TOELrytcg3vhjfBBvxaJlq/DKV74SSinMzMygVqst7ACWGo2GM7oMJW9n
      thApo8zBpBYnZ3GEIi8QJ7GZ3DYDsueqQCNXvM6mKLHIjM/Nh4lSkUlGFXvYd8lC6o6Z6vAm
      uW/OOWoxHdiVpNAhnIlJTZ5zrW+kSYIez3W1eSodji+l0Mo90Rk2uBAu2AamAs3znve8gX6F
      zxIeGybSAZrh1Ot1F9TvU6vVctePj+vkvLS7E/HGHyNDAgWC7du3Y+fOnVi6dKmzHC8sAEOE
      ELRaLZfAqep37VnJSgasmDFkhc5oYDmklBI0pch6GUiNQMhyqkRAozoRYZCSQSgdhujj5NYN
      opv3UE9qLlB9WF4hv5+A2YmILZsUGTdlXX2FS1GOhLP2CxPhptvR/6NUFxPPeK79iARxVTXt
      TpHzfslYAG5H40IgYgydrKez55FBZ78qy28VEuQbt6qYQtUYqNokfp6eiBuyZ0CAOajUp4UF
      EBCNGGDygBacl9Ic+kXufKVqYuevULvrUrCtd+Kq/NnYOf4MPOUpT8HRRx+Nbq+LKEncpAjx
      bb2wytZde4+syIw4gdJ9RynZ4Xe7cLjUaQ6hBsu/EkJcRJtSevHU4tQF+WixJXEcXkGha8o4
      NdKaKX5tQASzI8YsQsZzEKLTLPaKDPWkVgIcRj3DKOU+vMYfs5KISiLUXvwRNH74Q9SVwrOe
      9axSChql1IIOENJcew5z7TZiFqHRaKDb7ZbFBe/lESXQ+OEHkP7iS+76S/H7eBBrAegMDaef
      fjpa42OI49gFpIRcT0dOlSu2W38kmwAWGHQVLoqiBOP6xjthjFTciFglIx8IGmmttKCk0oUB
      dYin9t237gOWy9tJ50eA+SWQ7Lg0TLLdTtYruVc3giS89pqqyWyfpdvtOgNXFfoWjkm4cEL0
      ziel5mlu0FHUarawdMkSV7QOKJvO/cnbuOF9pckfUrvdxpVXXok8y1EUxYCy6yvOocU1Ygz1
      pFzuNMzSYM8NJ4G2UdjAmz7Hj0ylGZ34Vot5aZq6CcKlcFkh7H0KXqBXZK7gny18Zw1h4f2Z
      v5MRuAwRNmeRT1JJtLMuMlPku4p8N+mqHa7KzTy83rcFDPxeeXSeU8QiV2SCRf1icnbycikQ
      b7kd6V2X7bGtoijwg+9/H/V6XS8CL0GrP5mJtzNUcTr/JTuI1PO6tL75NkC9f48+fBqzqJ+3
      SPVjBWyElr1XGvfdofXvsj+Rzb1tNZlRUKb1F4oocxmc/UmcuxgLlJzkwvb87/6/Ycf2hRZ0
      gCGklALnHN08AyEopfeLKEN65yV73daWLVuwa+cuNMdb2mtTKSdahDTs2DDLaS44FOcAFBIV
      l2wYVhaPWeTcFGx7CYswNjbmnMgopVpGD/QUGy3GA1HHjpH/CcAsRO39mkax84FSSsLCaLZ9
      vy7DMLTIv8ewxTFsbMLxq9I1FhbAELIJX1MpHXf1uTXbdvc+tbd92zY0x1uIoghCSKiiQJIk
      pZdSVbDaHlfoZ4xzfaQMEbUKrkmDqATqSapjdIkWSapqC9iKj/4Owyqsv4QQnVKda0XZPx+k
      bEOwi866YgulXObtrMh1/n8MlpTSOo8wuZj6okri1VYbBZNWyf3hM1fpGoQsuEKMJGYQoHDi
      AbrM0hyWYhpjmEULM2hhFk1sxvLKtvI8d3I0AAgJyKyHWtpXDH2OJqQwYgbMMek4pt+XyIg1
      1kFNQ526qk0Vh7ZV1KMocvn6Q+4bolVSKkhIV5gCMAmvDGyqj+kcSdZb1sZa2+9JYIDz75UV
      upYZFEzIkabCWJp19JlyCcX2RMMU63CcgYUdYCTV63UIIVx4o8P4KcWl42/B5vbmvW7LGmcc
      EY3WdLpdRHFUCmaRJiudkGU/F/tpJ6uNO3C/EYmIMAguIFBO1KU8sasoipL/fJXOAZQLzFHo
      FPA+vBoRCqJIv59KoRA5JBWVFt+wT4B1K4EL+yyKop+0C9pAR5VuS0gFVVFAb5T4sycD28IC
      GEGEEIyNjUEphampqRIKdOCBB2Lz5r1bAIwxrFi1spSZgRACCW2pzbIMSbMPZ1JKAVmG/Qgh
      JTGIEJ0pwUafWfL7aCvJ1DxDmm0rvK4KTvTPq4oSy2xadpb2jxlbQWKU3sIUI7TuGj5V1QOg
      lDpod5TuEwITw57B/1so6VAqd7+BlhdogHzub+moo45CmqYjrurT0UcfjSiOHEZOw0kdRWh3
      2u5eloYZfcIJ4eRvL9imm/dMgiotTmVFXoIM/X9hG/5vPoTo/+7HJvh9VGbn4kLorHsWpRKy
      8nr/uqzInR4QnmP/CSFKOtmoZ/DTtksDavjtzPvkuHtLWZa5AhBKaWw8jmO86EUvGii7E9Lq
      1atx/LpnuTz9Uum6vPBfGhRoxHTufvRfqi5l5EVRmc8oitx9wwqNSmk7gE1UBcDlPNqTbGzb
      GHY8nGjWHSIrNI5vS8/qexorMmVIo9jpJHZy+2QnLGMM3V4XnW4X7W4HWZ65vKB5niPLMnDO
      wU0cd+F9Wm9e2z+gbFikhLgiGvZ5tGi3QHukOI5NsTeTE9Rs5WvWrMHLX/5yl3LDJ0opjj32
      WLz4zDNKFdilki6nqL9NS6UzOnc6JnuDksalmiKOopJbdVUmCXtNx3D+cMKGDnbW7uBP+DA5
      VdU9/H+2wry1OFsF3+5sCtpm4kOo1l/Kb9P2QwiBOIrBoggsiiCJdk1JkgRJkuigo4rvSZK4
      MQl9paqex5JSC64Qe00zszOYnpsFgJJJ3w7utm3bsHXrVuR5jomJCey3335oGt93m27FGoWs
      I5pU0hWkBoxiySIUWY5ms4l21i2dzxhDNzMlgZJEb/EWPfEyNBODyPjFP6wxapiIVSVv53k+
      kOGianFY7m9dLhJjd7ALv56USzdJKdErMlPGtZypodfrOdHSpVXx3oOvn/h/Z1lWst4P2+0G
      ULSBMxaoksbHxnV2By9mwH8Jy5Ytw/Lly42IxBFHkZd0izvRhnnWXiUVYhq5KvQKWnFttVou
      8MMWq3D3EhL1lk7qRRlFvV7H9NysdhUOJpqC7ou93zAKFdFh5/Rh0b69QotcNgxULz3GdCJc
      hyCFRUisruIds8q7vxBDu8Swye8/mw8C+PYJ/zqg70W7sAD2gcZaLXQ9aLDqUymNVyv0XQGA
      /uQKRQAZoD0R1Qun2Wyi3W6jVu/vNtZBzjrBEaJTftQSXQPAD3UEoCFRInTUGPoTIUx9Mmxi
      +RTCsP6xOIqMoStCwXUK9JK+oL+4cYgY0zYWb1yqEof59/DvHcK29lOYfKZEVXjFmudlqkD9
      xgsx/cAtuDQ5Z0EH2BeKWIRli5dUVm+xZONlrUuC/T0yoknoPWl9dAAtAgnVV7YbjQZ63V5/
      kaGfuc3dUwGQyrkx+ESIKVrNIiRMi1FVkz3MQ1T1XL7sb89zyqZZ6P2KOeWC46SiLRrcL0wS
      bMkqyGmaDiQw8K+3Il9uUt5bR71du3djZmYWvV5Pu3vc/Emkd10O2tuFmZmZhR1gXymOY4yN
      jWFmdhbcxP36O4D9G7DRVhJSCkiiSwiF4gAhxPnrhJMw4wVYHGGu3Uaz0dDW3qj/ykpyubfV
      +79JqL5yCoLEVF0Mubzflt9/QDvd2WcDbNFAuPxCEWOok7KVWkGBmxTpWuRBKRa5Xq+j2+2W
      RJQq8lE2zssOeSVFmlBELAaj0jn2CRNyWnCOqelprFq5AuMbrtNtmam/sAP8JyiKIrSaTZ0k
      lhfoGveD0JmLGJSkkdZRi1OXvc3Hry0HtlzY/q7rlGkEhcYaIgV08YsqBS9EdLjg6BZZKaWL
      gnJeoCGFMKnffiEEMsdd4cIfkygCpX2Rys8MzYzyzggFF9yhXn6KEtvvOI5d2kJ7b3+HAeCe
      O/zdP893laBU11kDAdI0wapVK7VNo7UKAHA3DtHX7M0LX6BBYoyhWW8YnUA7e+nglWpZ2rfg
      DkNULNkQQ0tKKbAkQrfbK9kjqsiiMXZXCL3g/197V9IjyXGdv4hcK2vr6mWmZ4Yzw1lImBRI
      y7oIkAQYPsqiAEMnEQJ8sH21Lwb8T2z45ovh7WjAgAzBsA462ABh6UJZBqfpYc/W63TXmnuG
      D5EvOjIqsnuGpEY9dH0E0TVVmZFZWe9FvOWL96QJ1jQlVCQlz+Q+X60XgsxHOKjqMCdldWlb
      pBBCJSik4wvlvLrcAbgDGOYPgIYi08ze1kesbYWwrXjm58OagiKEAFwXybf/Avnef+Oj9H15
      j9anuMKFcBwZn07SBIHrY5ElKMoSnuMiLwsVIwfs9GGz5RDZwDJy5EKUxXK1iDDEvObwtAlE
      WVXIqwqOw1XTa/MYs5YOgRiZUdAUCwaGjh+qitK2zppyMEna0z9rc6bPizgBZ7kO2SNh2Ydo
      3J9xnfOumW++i8Uf/ht+7/H/4/4AXxZcrc8whTvzogDY2UPXy4kQ9FnNjMhwToRhoajBslew
      C4dzhGEoN+e3bPNjQF3dQRawVUmossL/fvq/6Ha7uHX7Foh+1hQehtDgCBGEEGrTytI16/Mf
      P36Cu9tDRP/1l/hp8g7uv/9N1bvLPFY3/8yxdNu+qiqrz0JjmGabqWB5USj/Q0Xpwi7u378v
      fzfrt13hhaD/IL7jIRW5KpNOn6VFAbAcDuOKzqwLvek30OxM5dSppApQmyOeh0W8QDeyJy0d
      R1aZSPIM8XyBbr8LDo6//4e/w3g8BgB869vfwnvvv6/MHRqbqke3fU+b4OvvbayvY/Avfwz3
      6Uf4Ff4IP/+fXfzoRz9SfRPOC7O2wQwq2CJT5PDa7lOVhYF91Vk5wV8AjMlOM57nya6L7IzW
      Sw+bMwaPuxCC2oJmqoRI2wqg5wy49gMD9Uzs+Y3ulvqs6XIHoeejLEqcno5xcnyKo6MjJfwA
      8OnOp5jP5nj+/BR7BwdIsrRRBfsilPUmIXKwi6JAJSqMui7cpx8BAEJIHs/h4eHSTH+eXd/2
      nAnmLE+voyhStUDTNFUTiaNn3i37glcrwBcAY0xVJSYIIXn61H6J3suKXFEDChVWrMlakBUW
      AveMBqyPZ77nuq6iDOhEAbWq1KUM37h1A7PJDINBX4UdAUnQ63Q6SNMUjhPKzfC53D7pWvwW
      qRxSuZM8haidCwqNHh0eyTqkcYL+5m/BOfoVfh//jr91P8Ta2hrmNb+JaoGa30f/rm1hUV1p
      bLkKyptQJYs8z9W+7rbrAVhxgb4oynrXlsM5sjyTs7bDURalmpFUTL6un6MnicqyVI3rOl6A
      sq6nT2XHZfnEs/wBY7JAV1mWjdKAtrh+Vsq6nkVZIo1j/PLjX2I4HOL+22+hFBUCV9bsKWvK
      c15JurBbrzxlWYLXvg0gu84keQa/Lg9P3euTOFHlCLvZITZ+8Vdg6QRPf+fPUQ7eQJ7LfMlo
      tHburM8YwyJeIPDP9gqbUbMXdaLLsmy0VSXnfzAYNErirxTgCyIvCiziBaazGaK6eUPg++h0
      IvBaWBmTNS3pBzGR5TlKUcF33SVyHLUu7dQEPBqLVh1zNtRnSUpCxVlyZiaJs/4Foedb2yPF
      WUoXB7hWLcL1VYgzrRmnRVWiG3YanTbVs6E+azUuMns454jjGI7nNjautDndLwOabCgjXJYl
      oihamUBfFJ7rYtgfYNDrW38YioB4nie3V9bZ40WWIHR9tfk+S2NUQnLni7Lu0Qs0HFVgOYpi
      JrBMOJwj8kPEebp0TFbkkoqhRXfkeGgQ1Wh8arhdVVRwS46dpOnSji8y+6hcvFnyxTarqygN
      b+6x+DwCT+OZ41AdJCEEkiRZKcCXhYt+JCrqmmUZFotFXTowR4dz2fSCSVpx4Hoy3AhZ04cq
      yem5AiUwkHF3FThtUQIyrxZ1OUO616oSgLNsalAw1QS1RKpqP0NA5h18z7fmGwCoa1JtVFIM
      3/WWWKWfV9BfFIyxBo+r0+msokCvArT00gw0GAwQ+gG8uupEVhYIXK8Ok0pqwPpoHb7nNai9
      ADCdzdDtduu9BKk0V2rYwoC6YLl6PkJI1qprrC5tzikAZGVe72qrEHgeOGOqu6Z5nr45xnc8
      q+nXRoB7EZjKrjvQ5vchBSOHuCgL1fh8pQBfMigKpMOp6b/04ziOg8FggKCOu1P2GKjbspYl
      0jTFcDhs1Mk5m7nPahXZoiLK6Ta2Swaer2r2cO4sEfPo/k3oiqFMJcgCumEYWpNjfr2SedxR
      JdwJnuO2rlYvApvwt907vd/IGdSVt6uqWplAXzYYY0u0XUpg6eCcI4oizGYzq4AliaRWVFUF
      7mi2d1E0Ikv6j6v/u81xdJizRJ3WVwnGZCEsGeWR3SuLqlDRKzqGvmdbP4Wi3p0GblCnLTWW
      LlIG07E3VzryMVpDndp3A6DKNAKrPMArAQmuWUXC8zzV+FpShkt4DlcFuWSDimZIcLS2hvl8
      Dq+mLNj6A9OxBDN0aO4bSPIUvntWVlHmAwTSsgLnDB7zAJGjlH2T5HcSZ6xOmx1fVKUs2yiE
      3JPgLs/6L7IKvMgxuinV5kvo7+vPY6UArwAk0Db4ng8whn69QjjsjBUZxzHiOEae56qkRxRF
      CMOw5gc5rTM9gWZf3ZHWzykr2UaJGKgdrV6n40gzKanbQAWOB1bTm8nU04UvK3JVeYHpjjRr
      3hs5o3ojkhfxAUjJbBlwAGCigr//c/DjT/Aw6eM4fBMbGxu4du2a9RkJsWqU/cpgcwIBKYAH
      Bwcoa4Ibxaup6FUYhhiNRuCc48mTJ+j1eqqmKNW2IZB9S4phJpPIjGKMqX4ADpeJrigIVV8x
      lzWb6Mk9vqUKx+rlRdpMLs9xwUWlKlPHWaq6xOj3cZH9rkOPhOnK4FQpwl/8DYKP/hosnQAA
      dvG7+A98A4CkSXzzm9/E1772tWXy3SoR9psFRYiApk1rCgbN3Ht7eyiKAmEYYmtrC6WoVFun
      vObkdIOOmvVtmeKyKpHXIc3Q8yGEfM9hHNw5yzpnWSZ7+tYhWb3cIcFGSzA/Y4ypjjLUNFA/
      Rw8OLBYL1cLUBtOcc8cP0f3nP4FzstM47seaAhCuXr2KDz74QMm5EKuyKL9xCCEb8y0Wi6Xw
      pSnAlDRjjCFJEhweHqIoSwyGQwyHA1SVQFHkQE3NMP0AmnkVhSHPAAhEQUfuoTWi+blRwfoi
      29p8n86h15SRllWtpTLp35EywUEQtCqTfh/O7Bn6//gH4PODpevbFAAAhsMhPvzwQxWUWJlA
      v2HoUSPTxjXNgqqqkOe5OufmzZsAgNPTUzzafQTOOTY3NxGEAXjdkUWVMKwq1RSczICg7u5I
      xXg5q7lG9erAtHtkbLmQlgliYRLXxoSoJFmccSCDbCxohozNzLZuvul/OQO6P/4zq/Cfh/F4
      jJ/85Cf44IMPVmHQywLKC0wm0n61zX5mBIMIcWVVwe+EeKP/Bhzu4PDgAEeHh3BcF9e2txEE
      gbKdi7pWJlGss6Iub17/V9YkPEnaK+FoaSLP8zCdTpFlGWyoqgqe52E0Gsn7MpRAlnTJEbhn
      IUgz9Kt/XxPmSuPv/KuiXr8sdnZ28OzZM1y9enWlAJcNuulDDrE+K/b7fVUvE5A+RFpkyLiD
      XifC1taWInvt7e2hLEt0Oh1sbW2BcdnUTlSiLrh1Vt+TZn9AowyUzWjL0dERrl692rhfXSiT
      JMHDhw9x+/ZttRKczdiSTGfL1rYl3yh7a1sV/I//6Qs9548//hjb29srBbgsINNkKWbPm7Mw
      1cJMErlBfjAYYDyZSPNCEzrHcXD9+nXlL+zu7qKqKqytj9Dr9TDw+/UGedYIvdJ1GGNIs7RR
      Rt3zPERRpMKXpllCfdBOT09V5Mo0cQgvGva0Hcsg4D75zxd8snY8fvx4lQe4TOCco9/vYzwe
      L8W6ATnT68KoR0p63a5yovXjSRk8z8OtW7fAGMPx82M8fvRYRel1O9+EAFTiC4C6vr47zTzv
      ypUrOD09xSeffIK33noLAC6M95vmne11I96fjsHyxdI4L4PpdLrKA1w2OI4jKz/M5406mRQB
      asslBEGAIAhQliUmk8lSboBWBs451oZr2FjfaHxuixYRZrMZer2e+swUZv34qqqQZRnW1tYQ
      hiEePHiAu3fvqk6UJmxCbstgL12vKmBigh6eYBvPcAVPcRWPsW19VubYKwW4ZCBB15d/ep2m
      aaOvrwkzwWT+m6JCullyXr6AzqdmeqYzblIgaIwsyxAEAW7evImdnR3cv39fRXyIx2QyQU3B
      N4/RUXU2scPu4InYwlNcxRNsY4reSz3nKIpWJtBlBG1zNPMCwBnTtE0BzPCp7fy2MCO91v+a
      Y9mOtb0WQqjS6rdu3cInn3yCjY0NrK+vq+iVeU+m4rV9BkjT7Kdv/CkePXrU/iAvwI0bN6SS
      fe4RVvi1Qc8LmMLVFmMH0EiU2YTZFnFZcjCNa3qe11gxbEqgrw66klEm+e2330ae5zg+Pl7q
      j9xm8tAqaLZJouPffvvt1ufwIqDzVwpwCUFJJyEEDg4PMZ/LChNF7djm+bINTOj1eq28GnN/
      wHmzuMq2Gva7zfFtUzhAZpPzPMf29jbG47H6biZM84pMpTbz6N1338VwOGx9Dudhe3sb9+7d
      A7BSgEsJzjmGwyE450iSBEmaYG9/H5/t7uLw6AgPdnZaz6WSjbrwtAkRwfyMSHbmrGvCpkB0
      jn59ala3tbWF/f39hgmn8gRaPy/bNWwr2fe+970Le7SZCIIA3/3ud8/oFy919gqvDPSDd7td
      hGGIbreLwJd9sdaGg9ZZHkCjtalN0G0UC5vw0bG2SJH517yWOXZRFBgMBpjP5w0zyuwWSffp
      uq7qCUBNAanJN93P5uYmvv/9779wt85ut4sf/OAH6Pf76porJ/iSIY5jHBweotftwnEcWXnO
      dRELgWvb23AcruxyKo7l+35DQGlWtJk5NmG2JeDUDMmXy5PYTKC2f+sRKP09284wet/z5Ib5
      p0+fqhVtMBjIwry+L5mvNSfq5s2b+OEPf4if/exn2DlnZXznnXfwne98p1HEDFjRoS8ddh89
      xvVr2zgdj/Hws8/QjbpgDFjEMaJOR1ZyAOD7HhZxjDRN8Y2vf33JFIjjGIuFTBaZAmqLAJ0H
      YoXq5150vm218X0fJycnAID19XVF4wZk/aNKVOh2Iuzv7yOOY2xsbIBzjizLMJ/P1QacN998
      U7ZLrTcJkZJOJhM8fPgQz58/R5IkCMMQm5ubuHPnDrrdrp1ysVKAy4Usy7C3v4/ADyQVwfPB
      HY40SZAXBaJOJPsKM4b5fAHGGa5fuwbGmt3fhRCYTCZntAXOcXx8jE4Yqhi42VFRCFlMls6n
      z2zdIukzHW1hSwLN7k+ePAEgQ5G0XTQvcpRCoNuJ8NnDh7h7927D+abVYXd3F0EQ4Nq1a8iy
      rEHLsMGm7KQ0VVWtFOB1ANnQ8/m8UQWZWJ5RFCFNU3S73UanlcVioTbbAMDR8TE4l80uJpMp
      ut0IjuPUq4pAnCRYH43QryNJQgi4rovpdIpIq+tJaAth2t6n9zjncF0Xk8kER0dHGI1GWBuN
      kOU5wIDZdAomgNFotMQ8JT9gPB5jPB7j1q1bjbyCLSyr35NNGVZO8CuCvty/LBhjqjeZ3heA
      7OiiKBrFb4GzvQNSwGWVOc45wkBWo7t65QpGa2vodDrodSMMBgMM6/9phSBB0Uu6XGTy2KD7
      AFSzczAY4N69exBCYGdnB3meQ1QCB3v7yt43M8107nA4xObmJh4/ftxQeD10aoZadeHXHfbV
      CvCKIITc5G6bSV8GNr4P51zxdSiJluc5JpMJPM9rKF6bI0vvR1GkmteRAJKzbatOR2Pp9AUz
      pm+L59N9kwDv7OygLEtFoDPpGrrZwjlHEAT47LPP1CpgRpNszr41pLpSgFeH82LqL4OiKJQS
      6KYFlV8EoKJE3W4XcRyrynR0H8D5zjFBVwDbdzEFq22F0I/XjxVCqKgWlTM3KdQ288rzPMRx
      jMlkgu3tbcVX0q9Fs73tmavnZr3bFX4t+DKEH5D9Abrd7lI9nKTcS+EKAAAIZklEQVRu4l0U
      haJXk2JclDDShczMCejJLR37BweYzxfYq/8eP3+ORRzX2eoc48kEJyeniONY7gjLc0ym08YY
      jDFluiVJ0iDenRehKooCURRhWo9HFTVMZTSfkfl6pQCvAWydTfTG0bpTPJlMwBhrCDyZSGRu
      2MwRm/Doq4stm+x5PlzPReD7ODo+hhCSrDedzbB3cIDZbI6yqpBmGWb0Xu3I03VUNKaFlqHf
      D12XvqsQAjdu3MCzZ88agt5Wfc62p3mVCLvkEEIoUplr1Ng0FYNmf72JHsF1XdngezI5l1BH
      4zDGMJvNZFkU28zJOYJAJuAGteNMNUCTJMH2lStIswxhKMswxkmCq1tbyGrHnMYh6rR+XZup
      aOvBTKvA06dPkef5EnEPgNoHoZtc+jVWPsBrACoV0qjClmU4PT1t7M4CpGB0Oh2sra1Zx8rz
      XJkNJsIwbIRNVRsmC4+oze7X/QybT6B/rpdB0T8jR1ePBNkghFD5iU8//RR37tyBEEJxj/T7
      s/1d5QFeE+g/quu6apMKObbmjOm6rooK2cai8wEo+5sxhl6vh+l0qgRPzwC3jWXCVAybINK5
      aZoqx9eM8uhlHG2dNPUQKZH/Hj16hNu3b1urUthWFdd1Vz7A6wCylReLBZ4/f47T01NkWaZi
      /LTlkf6mqezQ2CagjuOg0+ks9RijfbIkKEEQII5j60yuV6vQxya0Jcb0z3zfVx3jdX9Dt/Nt
      9r95vP48Hj58uLR99Lzo20oBXhNwzmVPgdpc0LkwBF1A5vM5ZnVX+fOiKea5+mshBMIwVHkB
      /TOTvmyL3BCZT39fd3hJgemeF4sFTmqzjjEGVq8EizgGaqEv6zaoJNRpmspeX66LtbU1bG1t
      4dmzZ0uNxG1s1VVhrNcMZKZQrNwWt9cFkqpKm86zjiAI1Cysj0EzqPnXjOXrx5uzNV2f/q1H
      fQAsRX+SNMX6aISj42OUZQXXdZBlGcqqwtHxMQb9PoSQFI+8yHGtrlFE9jw15G7bwaa/5ziO
      pFq/wHNf4ZIhiiLlA9hCpAQhBGZ1SyWzQQcghbpb066zLFN2sy1ncNEqYtr7+vsk+LoDTYKp
      338URTg5PUWn00FZlGCcIajrIMX1d+1GERiDEnhdoXQauK6QuslE90gRpJUCvIagkCh1aCGT
      QPF+NGElh7CtrApFjTqdDsbj8ZLzWFUVXNeVTTnqnmX6vl5d6EkQ26o52K5NTj3nHIHvI2hx
      uvWcBzm9er9kur5e+cLsQaArIDn3Kx/gNYbneWp2p5nctiLEcYzpdHph/J/6felmA+ccRVHI
      HWl17SHb9kV9pp9MJojjuMEbMp3iLMuQZRmqqmqEXm3Oqs3kov9JMXRb/86dO2ozjf6ZDhVV
      O/eJrHDpQYkoQAowCRdjDCcnp2CMYTgcgHOO+XyBIPCXdpARaHcZZZSFEJjP51hfX1erDLFO
      ada1RXuoUBdtyKEmgcT3oYgN0Rdo1l5qXtESuaE9BGTL634HRcto9g+CQK0UQggUVQmvTqJl
      ebbKA3zVIIRQ5Ldne3sQkB1d0iyDgECRF/jt99+70EwZj8eYzWaIomiJumAjxwFQWxWjKGqY
      QxSi9TwP8/lcmW8E4gOZESP6PrrPQJlxs4mGmScAgN3dXYSdELdv3QZwNusLIVBWJYpVFOir
      B8YYoiiC7/uYLxYo8kJ2fakd3X5LgkwHCR3NnuYsy5hkiJJPoDM0dSHTCWlkNhEd3PQddPPN
      PNekflNiUL8vGoN8obIs8d5772E6neLBgwcAgLt376qImBACpVhlgr9SqKoKjx4/hud52NzY
      wGw2Q1mWmM5m6NdkOKqsQG2WbOYQ7Se2JZD0TG8cxyqTC0h6BikFwTab6+PoszqtHLawpa4w
      nHM8efpURovKCr1uVzbuq80oauka+H5DSXd3d9Vq0ul0EITBagX4KiGt9+72ez082NnBIo6x
      NhzKnsNFgfFkgm4UqUoLp+Mxbly/jitbW9bx2jpLAmdhyCRJlBKZdAZgueCV7fVFCmMqYlVV
      shR7liPNM6SZ7EwThR1M51LZy7LEoC5/Qsp17949Nc7+/j7m88VKAb5KCOsozXyxwKA/QK/X
      Q6fTQbcun371yhX4nifLjtSmQmix5X3fb2zhNPk89BqA4v5XVbVErTB5QW2UCHptRrDaKsgJ
      IbCxvt7wRWjlWF8fWZ+NHg7lnKtGIisT6CsMIQR2dx8BDHUW9UzgRqNRa5SFENebW2zVoWl8
      ml31zfqmkuiriE0RdFYorSJmdInO08c6PDzCaLSG2XwB15VRJjLxeposU9Zcr5intnh+zme7
      wmsAIURtGwucnI7x8LNdxPWuMWpodx5o9ej3+6oQVWUxXUwekC74piDbMrT67K9TLyh5Z4Y5
      aaxKVIiTBM9PTjCZTJFluUqQEYggqFOuO50OoihaZYK/6mCMwXVcMM4gyhJrwyE6dbKLqNRt
      OQF9DM459vYPsLEhzQ7HcRD4PoqyxGw2R1o7v1UlHVLGGI6fP5dd7et+Bm2OLV2b8g9Ey0jT
      dCn7q99nmqa4cf06hBAY1nkQfewsy1Q2OAxDlcADzhTWcZyVAlxm2MyFlz1/bW3Y2DRDYxJt
      mmrtnIeqquRegdkMaZJiOBxgPJmiKHKUpZxhXddFWZU1V4epKFFVlpjO5+hGXZycnKDf7wEC
      KIWkK/ieh7XhEL7vq/pDlDPQY/3kbOd5rpqExHHcyATrPkOapo1K2Xq1Cn21WinAJcYXEX46
      n8KU8/lc/fAkKC8i/IDkHr15+5bKshLbUhemJEkavgD5BkmaAQLgjMEPfLiuB6dOphVFAd/z
      gLqnca/XUxt1SInINKLdalQNgjb7m0WxiIFKtA6Cbkbpx/8fzecR3UjUaSUAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='import history' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='% change of import' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAUVklEQVR4nO3deWATdfrH8fekTZre6c1RekBbaKFQCgjIUSu4gIKieLCK6yqiyOK9Kl78
      VPBWVHDVddnFg0vxQEU8KIrIylWQI1CuAqWlFGjpkbZJkzTz+wNwcakrDaShmef1V2fSJk8g
      n/leMxMlLy9PNZlMnK+qqqqIi4vzdhnCx5SXl5Obm6v4m0wmUlJSvF3PbyosLKRbt27eLkP4
      GLPZDIDOy3UI4VX+nnhSu+UQixfMY9P+apJ7D2Xc5YMJ9IeyXetYuGgJlUos19z0Z7q2C8FR
      W8YXCxeSX1RNr0uu4crBXfFTPFGVEKfzSAtwcPc2glJzuWfyn6la8SYL1pWi1hcz65V5dLns
      Fq65MJJpz7yOE1j67mvsDerGnbdeyY9vTWd9mdMTJQnRJI+0AEk9h5AEKAr079mWvNJySlz5
      VHbMIbdHEnprOAlv3s12ywF+2lzD+KdzaBfjx43D2/PJygIuuC5T+maiRXjkc6YoCoqiYK0o
      5LsN9VyU3YmqiqPEJ3QgQFHQGQwkRzspK6qkUZ9AWKgBFD/aJyZSXnyYRk8UJUQTPHSgVTla
      uIG33niPpMtuY2DHEFRVRf3Pw7hcBgz+oKrqf/7K5cI/QO+ZkoRogkcCUFW4hpn/WkLPK2/n
      xhG98AciomIpLSrC5lJx2q0UWvS07xCBv/MglTUNqKqTfXv20SG5vWf6ZUI0wSMBWL7oE1KH
      jaVXYhi1Fgt1NjvxPXPRm5eydE0B65YtojbtQlKDE+iTBgs//ZrCbat5f5WVa3JSkEkg0VKU
      /Px89VwvhK39Yjafrd77y3Z8r2FMvGow1SVbmDf/c5xRmdz0p8sx6XWotmN8+dFcNhTD6HE3
      0iMh4lcBKCwsJDs7+5zWJ4TZbCYzM1PxSADOJQmA8ISTAZDZRqFpEgChaRIAoWkSAKFpEgCh
      aRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkS
      AKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgCh
      aRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaR77UnZnfQWf/fMflCdcwu1X9ALgb1NGs7q8PTGh
      BhL7Xc7d1+ZSvmclr85aSIXdQWBCDs88PI5A+aZs0UI8E4DK3Tz51Cvs319O2tghJ3Y6sBpi
      mfzwdHonhqLodEADi95fRJ9x9zM8I4w5U+/lsy2jGNsj3CNlCfHfPNMFCozj5vumcvfYQafs
      rMVaYePg/j3sPVCGU1VQbAcoLDXQPTUJY0gUOQM6sm7jTho9UpQQp/NMC2AMo2OHMCw6BVwn
      d+ro3S+Xop0/MmvuFuKH38aDw4JRAtoQFOgHQFRMG6p3HWPjpk18+uGHAHTt2lW+KV54jMfG
      AKcLZ8SNNwNQd9jMuLtmUj9sEg5HHY0nDvk2ay3B0eH0zMqiT1YWAIWFhS1XotAc78wCKToM
      Bj8ISyTS/yAHjlSjumz8vH43WT3S8PNKUUKLWq4FqNvHG39fQnBUMPu2bWXw1bcQpJgYObwH
      c15/mU1JoRTYujEtOwqZBBItxaMB6JQzmhvVsOMbxjYMGdKfo5YGsi/8A+kp8SgKZF96K6aU
      7RyugTEZXQlvwU6ZEB79uIXExhNycsMvkM49etP5v35H8TfSKSObTp4sRIjfICvBQtMkAELT
      JABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQA
      QtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELT
      JABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQA
      QtMkAELT/D355K5GJ06XgkHv98u2zWrFpfgRGBiIn05BVV3YbTbsThcGYyABJ35XiJbgsQA4
      ag8zf+YsLF2uYPJVfQAn382fwcdrSlBsFjLH3MvEEZmUbVvGy298hlMP1pAezJh2O8HSLokW
      4pmPWsV2pjz4OKu2FlHpOL7LdmA1izf68djzL/P8sw/x73ff5Bg2Fs79jEsmPcZLLz7HANcq
      Fm045pGShGiKZwIQlsSDT73AHaMv+GXXgYKNGNO70zZET0h4W7oE1rKzpIiSihA6x7fB3xBK
      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
    </thumbnail>
    <thumbnail height='192' name='Db_import_history' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Consumption' width='192'>
      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
      w8RlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Db Consumption' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='C vs P - Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Elasticity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='C vs P - number of oil wells' width='192'>
      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
      SqX/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Saudi Production' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Imports From OPEC' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Price trend line' width='192'>
      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
      IDTt/wM7EDSopEl0yAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='db Price trend line' width='192'>
      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
      MwBjkQ4xYiaQs0BC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMk
      AELTJABC0yQAQtMkAELTJABC08bpE+wg6/hHZJ3LAyD//Gk+PZ5O98BXe72mEHeLMQOgKAqJ
      c1JobqgBoKa+GicXN7DbqK+vH2tSIaaFcXeB+vv66OkdBGDztl0E69vILmrAZrNNeHFCTLQx
      nwrhsPVSeLmMiMhI8vLyMOnsFDcPsWZTOK7yim0xA0ineKFpchZIaJoEQGiaBEBomgRAaJoE
      QGiaBEBomgRAaJoEQGiaBEBomgRAaJoEQGiaBEBomgRAaJoEQGiaBEBomgRAaNrYneKH+vks
      /Rg1je0ANFaXcSLrLPKieDFTjN0C6I0sXrKIM9mnQHWQfTYXf6WV3Bp5S7yYGcZ+KgQ6cs+f
      wejmBqgY9M74+XpRVVNPVlbWJJUoxMQZs2v7gLWVjl47bq7O5OUX4u5iJ/1iHdu+nopJHz9Z
      NQoxYaRTvNA0OQskNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRN
      AiA0TQIgNE0CIDRNAiA0TQIgNG2cN8WrnPrsKJcKywCoLMnnWHqGvClezBjjtgDzFq/gct4F
      APIK8gkICcfNSRoOMTOMuyZfyjlJ0vwlAGzeuoP+qvN8nFMmneLFjDD2m+IH2igorife2Ze8
      PCsmnZ2aTgcrUyPwdY2erBqFmDDSKV5omuzMC02TAAhNkwAITZMACE2TAAhNkwAITZMACE2T
      AAhNkwAITZMACE2TAAhNkwAITZMACE2TAAhNkwAITZMACE0b503xfXz64WHyS6oBqCzO5cgn
      GdhVeVW8mBnGbgF0RtZs3ELRxTOgOsi9XEmS3xDnKtpxOByTVKIQE2ecXSCV9I8OsiRtA6Ci
      Q4+LyYXm5hZycnImpUAhJtKYneK7G8uo79Fjbmygq6UWP28nMova+NqOlRiRZwOJ6U86xQtN
      k7NAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMk
      AELTJABC0yQAQtPGDoCq0lxTRsmVRgCKcs/x6fF0eVO8mDHGbQHqq4uovGIBoKyyDHcvH5x0
      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
    </thumbnail>
  </thumbnails>
</workbook>
